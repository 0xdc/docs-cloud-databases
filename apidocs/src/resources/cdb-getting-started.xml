<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">

        <!-- Useful for specs -->
        <!ENTITY MAY    '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MAY</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>
]>

<book version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xml:id="cdb-getting-started">
    
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>Rackspace Cloud Databases Getting Started Guide</title>
    <titleabbrev>Rackspace Cloud Databases and Servers Getting Started Guide</titleabbrev>
     
    <info>
        
        <copyright>
            <year>2011</year>
            <year>2012</year>
            <year>2013</year>
            <year>2014</year>
            <year>2015</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1.0</releaseinfo>
        <productname>Rackspace Cloud Databases</productname>
        <pubdate>2015-09-25</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
    <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
      <raxm:displayname>Getting Started Guide</raxm:displayname>
      <raxm:product version="v1.0">cdb</raxm:product>
      <raxm:priority>10</raxm:priority>
    </raxm:metadata> 
    </info>
    <chapter xml:id="create-manage-database"><title>Create and manage a database</title>
        
        
        <section xml:id="selecting-hardware-config">
            <title>Selecting a hardware configuration</title>
            <?dbhtml stop-chunking?>
            <para>|product name| provides a set of hardware configurations that you can use to create a database instance. In the context of 
            the Cloud Databases service, the hardwware configurations are known as flavors. 
            
            Each flavor has a unique combination of memory capacity and priority for CPU
            time. The larger the flavor size you use, the larger the amount of RAM and priority for CPU time your
            database instance will receive. You need to list flavors to find the available configurations for your
             database instance, and then decide which size you need.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref linkend="select-hardware-config-trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para>
                            <xref linkend="select-hardware-config-curl"/>
                        </para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="select-hardware-config-trove">
                <title>List flavors with the trove client</title>
                <?dbhtml stop-chunking?>
                <procedure>
                    <title>To list flavors with the trove
                        client:</title>
                    <step>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove flavor-list</programlisting>
                        <para>For each flavor, the command returns the
                            flavor ID, name, and memory:</para>
                        <informalexample width="50">
                            <screen><computeroutput><?db-font-size 30%?>
Flavor List for IAD, DFW, ORD, SYD
+----+----------------+-------+
| id |      name      |  ram  |
+----+----------------+-------+
| 1  | 512MB Instance |  512  |
| 2  |  1GB Instance  |  1024 |
| 3  |  2GB Instance  |  2048 |
| 4  |  4GB Instance  |  4096 |
| 5  |  8GB Instance  |  8192 |
| 6  | 16GB Instance  | 16384 |
| 7  | 32GB Instance  | 32768 |
| 8  | 64GB Instance  | 65536 |
+----+----------------+-------+</computeroutput></screen>
                        </informalexample>
                    </step>
                    <step>
                        <para>Copy the flavor ID for your desired
                            flavor from the <literal>ID</literal>
                            field in the output. </para>
                        <para>In this example, use the flavor ID for
                            the 512MB Standard Instance, which is
                                <literal>1</literal>. </para>
                    </step>
                </procedure>
            </section>
            <section xml:id="select-hardware-config-curl">
                <title>List flavors with cURL</title>
                <?dbhtml stop-chunking?>
                <procedure>
                    <title>To list flavors with cURL</title>
                    <step>
                        <para>Use the List Flavors API call
                                (<code>/flavors</code>) call.</para>
                        <para>This operation does not require a
                            request body.</para>
                        <para>Execute the cURL request for List
                            Flavors:</para>
                        <example>
                            <title>cURL List Flavors Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl -s</command> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Accept: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/flavors</uri> | python -m json.tool</programlisting>
                        </example>
                    </step>
                    <step>
                        <para>The following example shows the response
                            for List Flavors:</para>
                        <example>
                            <title>List flavors JSON response</title>
                            <programlisting language="json"><xi:include href="../../src/resources/samples/db-flavors-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
                        </example>
                        <para>In the previous examples, you can see
                            from the flavor <code>name</code> that
                            there are multiple flavors available,
                            including <code>2GB Instance</code> (with
                            1 virtual CPU and 2 gigabytes of memory)
                            and <code>512MB Instance</code> (with 1
                            virtual CPU and 0.5 gigabytes of memory). </para>
                        <para>In this example, assume that you decide
                            to use the 512MB Instance (id 1) to
                            provide the needed capacity for your
                            database instance.</para>
                        <para>Notice that there are two kinds of link
                            relations associated with flavor
                            resources. A <code>self</code> link
                            contains a <emphasis>versioned</emphasis>
                            link to the flavor resource. These links
                            should be used in cases where the link
                            will be followed immediately (as you will
                            see in the next section). A
                                <code>bookmark</code> link provides a
                            permanent link to a flavor resource that
                            is appropriate for long term storage and
                            works across API versions.</para>
                    </step>
                </procedure>
            </section>
        </section>
        <section xml:id="creating-a-db-instance">
            <title>Creating a database instance and a user</title>
            <?dbhtml stop-chunking?>
            <para>A database instance is an isolated database
                environment with compute and storage resources in a
                single tenant environment on a shared physical host
                machine. You can run a database instance with your
                choice of one of the following database engines:
                MySQL, Percona, or MariaDB. In the example below, you
                create a MySQL database instance with a database and a
                user, using the default MySQL 5.6 for the database. </para>
            <note>
                <para>For the SYD and HKG datacenters only, the
                    default database is MySQL 5.1 if users do not
                    specify the datastore type and version at instance
                    creation.</para>
            </note>
            <para>The example instance uses the 512MB Instance flavor
                and a volume size of 2 gigabytes (GB). </para>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createDatabase__version___accountId__instances__instanceId__databases_databases.html"
                    >Create Database</link> in the <citetitle>Cloud
                    Databases Developer Guide</citetitle> for the
                restrictions for choosing the database name.</para>
            <para>Refer to <link
                    xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Datastore_Types_and_Versions-d1e9263.html"
                    >Datastore Types and Versions</link> in the
                    <citetitle>Cloud Databases Developer
                    Guide</citetitle> for information about the other
                available database types.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref linkend="create-instance-trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref linkend="create-instance-curl"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="create-instance-trove">
                <title>Create a database instance by using the trove client Client</title>
                <?dbhtml stop-chunking?>
                <para>This example creates a MySQL database instance
                        <code>mytroveinstance</code>, with the
                    following: <itemizedlist>
                        <listitem>
                            <para>the 512MB Instance flavor</para>
                        </listitem>
                        <listitem>
                            <para>volume size of 2 gigabytes
                                (GB)</para>
                        </listitem>
                        <listitem>
                            <para>a database named
                                   <code>mytrovedb</code></para>
                        </listitem>
                        <listitem>
                            <para>a user <code>mytroveuser</code> with
                                password <code>password</code></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <note>
                    <para>If you want to create a different database
                        and version, use the <code>--datastore</code>
                        and <code>--datastore_version</code>
                        parameters to specify your choice. For
                        example, to specify a Percona 5.6 database
                        instead, you would use:</para>
                    <para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove create --size 2 --databases mytrovedb --users mytroveuser:password --datastore Percona --datastore_version 5.6 mytroveinstance 1</programlisting>
                    </para>
                </note>
                <procedure>
                    <title>To create a database instance with a
                        database and a user using the trove
                        client:</title>
                    <step>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove create --size 2 --databases mytrovedb --users mytroveuser:password --datastore MySQL mytroveinstance 1</programlisting>
                        <para>For the instance, the command returns
                            the date created, flavor ID, hostname, id,
                            name, status, and volume size:</para>
                        
                        <informalexample>
                            <?dbfo pgwide="1"?>
                            <screen><?db-font-size 90%?>
+-------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|      Property     |                                                                                                          Value                                                                                                          |
+-------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|      created      |                                                                                                   2014-04-29T13:33:51                                                                                                   |
|     datastore     |                                                                                         {u'version': u'5.6', u'type': u'MySQL'}                                                                                         |
| datastore_version |                                                                                                           5.6                                                                                                           |
|       flavor      | {u'id': u'1', u'links': [{u'href': u'https://dfw.databases.api.rackspacecloud.com/v1.0/647683/flavors/1', u'rel': u'self'}, {u'href': u'https://dfw.databases.api.rackspacecloud.com/flavors/1', u'rel': u'bookmark'}]} |
|      hostname     |                                                                              9175290275ef3292efb02be33dd38ed44443e311.rackspaceclouddb.com                                                                              |
|         id        |                                                                                           18d48a36-0682-4cd7-a419-864105d6079a                                                                                          |
|        name       |                                                                                                     mytroveinstance                                                                                                     |
|       status      |                                                                                                          BUILD                                                                                                          |
|      updated      |                                                                                                   2014-04-29T13:33:51                                                                                                   |
|       volume      |                                                                                                       {u'size': 2}                                                                                                      |
+-------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</screen>
                        </informalexample>
                        
                    </step>
                    <step>
                        <para>You will need to specify the instance id
                            returned (in the response example above:
                                <code>id="18d48a36-0682-4cd7-a419-864105d6079a"</code>)
                            on subsequent API calls that require it,
                            for example List Databases for
                            Instance.</para>
                        <para>Copy the flavor ID for your desired
                            flavor from the <literal>ID</literal>
                            field in the output. </para>
                    </step>
                </procedure>
            </section>
            <section xml:id="create-instance-curl">
                <title>Create a database instance by using cURL</title>
                <?dbhtml stop-chunking?>
                <procedure>
                    <title>To create a database instance with
                        cURL:</title>
                    <step>
                        <para>Create the instance described
                            below.</para>
                        <para>This example creates a database instance
                                <code>myrackinstance</code>, with the
                            following: <itemizedlist>
                                <listitem>
                                   <para>the 512MB Instance
                                   flavor</para>
                                </listitem>
                                <listitem>
                                   <para>volume size of 2 gigabytes
                                   (GB)</para>
                                </listitem>
                                <listitem>
                                   <para>a database named
                                   <code>sampledb</code> with:<itemizedlist>
                                   <listitem>
                                   <para><code>utf8</code> character
                                   set</para>
                                   </listitem>
                                   <listitem>
                                   <para><code>utf8_general_ci</code>
                                   collation</para>
                                   </listitem>
                                   </itemizedlist></para>
                                </listitem>
                                <listitem>
                                   <para>a user
                                   <code>simplestUser</code> with
                                   password
                                   <code>password</code></para>
                                </listitem>
                            </itemizedlist>
                        </para>
                        <note>
                            <para>If you want to create a different
                                database and version, use the
                                   <code>datastore</code>
                                <code>version</code> and
                                   <code>type</code> parameters to
                                specify your choice. For example, to
                                specify a Percona 5.6 database
                                instead, you would add the following
                                information to the example below after
                                the "flavorRef" section (as an
                                example):</para>
                            <para>
                                <programlisting language="bash" role="gutter: false">
"datastore": {
     "version": "5.6",
     "type": "Percona"
},  </programlisting>
                            </para>
                        </note>
                    </step>
                    <step>
                        <para>Execute the cURL request for Create
                            Instance:</para>
                        <example>
                            <title>cURL Create Instance Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "instance": {
        "databases": [
            {
                "character_set": "utf8",
                "collate": "utf8_general_ci",
                "name": "sampledb"
            }
        ],
        "flavorRef": "https://ord.databases.api.rackspacecloud.com/v1.0/$account/flavors/1",
        "name": "myrackinstance",
        "users": [
            {
                "databases": [
                    {
                        "name": "sampledb"
                    }
                ],
            "name": "simplestUser",
            "password": "password"
            }
        ],
        "volume": 
            {
                "size": 2
            }
    }
}' \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/instances</uri> | python -m json.tool</programlisting>
                        </example>
                        <para>Rather than the flavorRef URI shown in
                            the example, you can also pass the flavor
                            id (integer) as the value for flavorRef.
                            For example, the flavor id for the flavor
                            URI shown above is "1". </para>
                    </step>
                    <step>
                        <para>The following example shows the Create
                            Instance response:</para>
                        <example>
                            <title>Create Instance Response:
                                JSON</title>
                            <programlisting language="json"><xi:include href="../../src/resources/samples/db-gs-create-database-instance-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
                        </example>
                        <para>You will need to specify the instance id
                            returned (in the response examples above:
                                <code>id="d379ba5c-9a1f-4aa9-9a17-afe237d04c65"</code>)
                            on subsequent API calls that require it,
                            for example List Databases for
                            Instance.</para>
                        <para>Note that the database and user are not
                            listed in the Create Instance responses.
                            Next you will verify that both were
                            successfully created.<note>
                                <para> The operation of creating the
                                   database instance may take up to
                                   several minutes. You will not be
                                   able to perform the operations to
                                   List Databases for Instance and
                                   List Users for Instance in the
                                   sections that follow until the
                                   instance has ACTIVE status. </para>
                            </note></para>
                    </step>
                </procedure>
            </section>
        </section>
 <section xml:id="viewing-database-and-user-info">
     <title>List databases and users for an instance</title>
            <?dbhtml stop-chunking?>
     <para>You can list information about the databases and users in an instance by using the list
                database and list user operations. </para>
        <section xml:id="list-databases-for-instance">
            <?dbhtml stop-chunking?>
            <title>Listing databases for an instance</title>
            <para>In this section you will list the databases in the
                specified database instance.</para>
            <para>Following are two methods for listing databases:</para>
            <?dbhtml stop-chunking?>
            <section xml:id="list-databases-instance-trove">
                <title>Listing databases  by using the trove client</title>
                <?dbhtml stop-chunking?>
                        <para>List the databases for instance
                                <code>mytroveinstance</code>. Use the
                            identifying information for the
                            instance_id, as provided in <xref
                                linkend="create-instance-trove"/> in
                            the response for creating your database
                            instance. </para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove database-list &lt;instance_id></programlisting>
                        <para>The command returns the database name(s)
                            for the instance:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+-----------+
|    name   |
+-----------+
| mytrovedb |
+-----------+

</computeroutput></screen>
                        </informalexample>
                        <para>You need to use the instance id
                            returned (in the response examples above:
                                <code>id="18d48a36-0682-4cd7-a419-864105d6079a"</code>)
                            on subsequent API calls that require it,
                            for example List Databases for
                            Instance.</para>
                        <remark>Writer: need to adjust this
                            section</remark>
                        <para>Copy the flavor ID for your desired
                            flavor from the <literal>ID</literal>
                            field in the output. </para>     
            </section>
            <?dbhtml stop-chunking?>
            <section xml:id="list-databases-instance-curl">
                <title>Listing databases by using cURL</title>
                <?dbhtml stop-chunking?>
                            <para>List databases fo an instance by submitting the following cURL
                        request: .</para>
                            <example>
                                <?dbfo keep-together="always"?>
                                <title>List databases for a specified instance ID instance cURL
                            request</title>
                                <programlisting language="bash"><command>curl</command> <option>-s</option> \
<option>-H "X-Auth-Token: $SUTH_TOKENtoken"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>$ENDPOINT/instances/</uri><emphasis role="bold">instance_id</emphasis><uri>/databases</uri> | python -m json.tool</programlisting>
                            </example>
                            <para>Remember to replace the names in the example above with their
                                actual respective values:<itemizedlist spacing="compact">
                                    <listitem>
                                        <para><emphasis role="bold">instance_id</emphasis> &mdash;
                                            as returned in your create instance response (see the
                                            examples in <xref linkend="create-manage-database"
                                            />)</para>
                                    </listitem>
                                </itemizedlist></para>

                        <example>
                            <title>JSON Response</title>
                            <programlisting language="json">HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 37
Date: Thu, 05 Apr 2012 18:13:53 GMT

{
    "databases": [
        {
            "name": "sampledb"
        }
    ]
}</programlisting>
                        </example>
                
                <para>You can see that the database
                        <code>sampledb</code> was successfully
                    created. Next you will list the users.</para>
            </section>
        </section>
     <?dbhtml stop-chunking?>
        <section xml:id="list-users-db-instance">
            <title>List users in a database instance</title>
            <?dbhtml stop-chunking?>
            <para>In this section you will list the users in the
                specified database instance.</para>
            <para>Following are two methods for listing users in a database instance:</para>
            <section xml:id="list-users-in-instance-trove">
                <title>List users by using the trove client</title>
                <?dbhtml stop-chunking?>
                        <para>List the users for instance <code>mytroveinstance</code>. Use the
                            identifying information for the instance_id, as provided in <xref
                                linkend="create-instance-trove"/> in the response for creating your
                            database instance. </para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-list &lt;instance_id></programlisting>
                        <para>For the instance, the command returns the user name and the databases
                            that the user can access:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+-------------+------+-----------+
|     name    | host | databases |
+-------------+------+-----------+
| mytroveuser |  %   | mytrovedb |
+-------------+------+-----------+

</computeroutput></screen>
                        </informalexample>
                        <note security="writeronly">
                            <para>Note that an empty list ([]) is displayed in the databases column.
                                This is because with the trove client, you cannot create users and
                                databases and, at the same time, grant users access to the database.
                                So the user mytroveuser shown above cannot currently access any
                                databases. With the trove client, granting users access to a
                                database requires an extra step, as follows. </para>
                        </note>
                
            </section>
            <section xml:id="list-users-in-instance-curl">
                <title>List users in a database instance by using cURL</title>
                <?dbhtml stop-chunking?>
                        <para>List users in a database instance by
                            executing the request below.</para>
                        <para>This operation does not require a
                            request body.</para>
                        <example>
                            <?dbfo keep-together="always"?>
                            <title>List database users cURL request</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/instances/</uri><emphasis role="bold">instance_id</emphasis><uri>/users</uri> | python -m json.tool</programlisting>
                        </example>
                        <para>Remember to replace the names in the
                            example above with their actual respective
                                values:<itemizedlist spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="create-manage-database"
                                   />)</para>
                                </listitem>
                            </itemizedlist></para>

                        <example>
                            <title> JSON Response</title>
                            <programlisting language="json">HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 113
Date: Thu, 05 Apr 2012 18:13:53 GMT

{
    "users": [
        {
            "databases": [
                {
                    "name": "sampledb"
                }
            ],
            "host": "%",
            "name": "simplestUser"  
        }
    ]
}</programlisting>
                        </example>
                        <para>You can see that the user
                                <code>simplestUser</code> was
                            successfully listed.</para>
            </section>
        </section>
 </section>
        <section xml:id="access-database-instance">
            <title>Access a database instance</title>
            <?dbhtml stop-chunking?>
            <para>After creating your database instance, you need to use a Cloud Server to access
                it. you can access it from a Cloud Server and then </para>
            <itemizedlist>
                <listitem><para>A Cloud Server</para></listitem>
                <listitem><para>An application</para></listitem>
                <listitem><para>A database administration application like phpAdmin</para></listitem>
            </itemizedlist>
            <para>See the following sections to learn how to set up these types of connections.</para>
        <section xml:id="create-cloud-server">
            <title>Creating a Cloud Server</title>
            <?dbhtml stop-chunking?>
            <para>Create a Cloud Server (or use an existing Cloud Server) to access your
                    database.</para>
            <note>
                <para>If you are using an existing Cloud Server on
                    your account, skip this step and go directly to
                        <xref linkend="configure-cloud-server-db"
                    />.</para>
            </note>
            <para>Create a Cloud Server using the Cloud Servers
                section of the Cloud Control Panel (login here: <link
                    xlink:href="http://mycloud.rackspace.com/">Cloud
                    Control Panel</link>).</para>
            <procedure>
                <title>To create a Cloud Server using the Cloud
                    Control Panel:</title>
                <step>
                    <para>Click <guimenuitem>Servers</guimenuitem> to
                        view the Cloud Servers page.</para>
                </step>
                <step>
                    <para> Using the <guimenu>Region</guimenu>
                        drop-down menu, select the appropriate region,
                        depending on whether you want to create a
                        first generation Cloud Server or a next
                        generation Cloud Server. (The type of Cloud
                        Server does not matter for this
                        exercise.)</para>
                </step>
                <step>
                    <para> Select an image from a list of different
                        operating systems, including Linux
                        Distributions and Windows Images:</para>
                    <para><inlinemediaobject>
                            <imageobject>
                                <imagedata
                                   fileref="images/Choose_CS_Image_CCP.png"
                                   contentwidth="6in"/>
                            </imageobject>
                        </inlinemediaobject></para>
                </step>
                <step>
                    <para> Specify the <guilabel>Server
                            Name</guilabel> and select a
                            <guilabel>Size</guilabel> for your Cloud
                        Server, then click <guibutton>Create
                            Server</guibutton>. </para>
                </step>
            </procedure>
            <note>
                <para>You can also create a Cloud Server using the
                    Cloud Servers API. Refer to the <link
                        xlink:href="http://docs.rackspace.com/">Next
                        Generation Cloud Servers Developer
                        Guide</link> for details.</para>
            </note>
        </section>
        <section xml:id="configure-cloud-server-db">
            <title>Connecting from an application</title>
            <?dbhtml stop-chunking?>
            <para>If you are configuring an application to use your
                database on a Cloud Server, you need to configure the
                application with the hostname for the database
                instance and user name / password for the database.
                Refer to the response examples in <xref
                    linkend="create-manage-database"/> for the
                    <code>hostname</code> returned and the request
                examples for the user name and password you
                specified.</para>
        </section>
        <section xml:id="connect-mysql-gui">
            <title>Connecting from a MySQL client</title>
            <?dbhtml stop-chunking?>
            <para> If you want to access your database using the
                command line MySQL client, then you have now completed
                the <citetitle>Getting Started</citetitle>.</para>
            <para>Otherwise, you can use a GUI tool such as phpMyAdmin
                to interact with your database instance. Common
                operations include managing databases, tables, fields,
                relations, indexes, users, and permissions. Included
                below is a procedure to set up phpMyAdmin on an Ubuntu
                11.04 Cloud Server. </para>
            <para>For more detailed installation configuration
                instructions see the phpMyAdmin documentation at:
                    <link
                    xlink:href="http://www.phpmyadmin.net/documentation/"
                    >http://www.phpmyadmin.net/documentation/</link>. <note>
                    <para>Rackspace does not provide phpMyAdmin
                        support, and the user is responsible for any
                        security related configuration.</para>
                </note></para>
            <procedure>
                <title>To install and configure phpMyAdmin on an
                    Ubuntu 11.04 Cloud Server:</title>
                <step>
                    <para> Install phpMyAdmin:</para>
                    <para>
                        <command>sudo apt-get install
                            phpmyadmin</command></para>
                </step>
                <step>
                    <para> Set up a symbolic link to the phpmyadmin
                        config file:</para>
                    <para><command>sudo ln -s
                            /etc/phpmyadmin/apache.conf
                            /etc/apache2/conf.d/phpmyadmin.conf</command>
                    </para>
                </step>
                <step>
                    <para>Edit the
                            <code>/etc/phpmyadmin/config-db.php</code>
                        config file to point to your database
                        instance:</para>
                    <para><command>$dbserver='&lt;cloud database
                            hostname>';</command>
                    </para>
                </step>
                <step>
                    <para>Restart apache:</para>
                    <para><command>sudo apachectl
                        restart</command></para>
                </step>
                <step>
                    <para>Access phpMyAdmin at
                        http://&lt;your_ipaddress>/phpMyAdmin:</para>
                    <para><inlinemediaobject>
                            <imageobject>
                                <imagedata
                                   fileref="images/phpMyAdmin.png"
                                   contentwidth="6in"/>
                            </imageobject>
                        </inlinemediaobject></para>
                </step>
            </procedure>
        </section>
   </section>     
            <section xml:id="backup-database-instance">
            <title>Back up a database instance</title>
                <?dbhtml stop-chunking?>
            <para>Once you have loaded your data and connected to your
                application, Rackspace recommends that you back up
                your data.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref linkend="backup-instance-trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref linkend="backup-instance-curl"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="backup-instance-trove">
                <title>Backup database instance by using the trove
                    Client</title>
                <procedure>
                    <title>To create a backup for a database instance
                        using the trove client:</title>
                    <step>
                        <para>Backup your database instance
                                <code>mytroveinstance</code> and give
                            it an identifying name. You can also
                            provide an optional description for the
                            backup. Make sure to surround the
                            description with double quotation marks
                            (""). Use the identifying information for
                            the instance_id, as provided in <xref
                                linkend="create-instance-trove"/> in
                            the response for creating your database
                            instance.</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove backup-create &lt;instance_id> &lt;name> --description &lt;description></programlisting>
                        <para>The command returns the name and id for
                            the backup among the other
                            information:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+-------------+--------------------------------------+
|   Property  |                Value                 |
+-------------+--------------------------------------+
|   created   |         2014-04-29T13:53:08          |
| description |         sample trove backup          |
|      id     | dcb64318-ddca-452e-a896-02cecc5c0aa1 |
| instance_id | 18d48a36-0682-4cd7-a419-864105d6079a |
| locationRef |                 None                 |
|     name    |            mytrovebackup             |
|  parent_id  |                 None                 |
|     size    |                 None                 |
|    status   |                 NEW                  |
|   updated   |         2014-04-29T13:53:08          |
+-------------+--------------------------------------+
</computeroutput></screen>
                        </informalexample>
                    </step>
                </procedure>
            </section>
            <section xml:id="backup-instance-curl">
                <title>Backing up a database instance by using cURL</title>
                <?dbhtml stop-chunking?>
                <procedure>
                    <title>To create a backup for a database instance
                        using cURL:</title>
                    <step>
                        <para>Create a backup for a database instance
                            by executing  the request below.</para>
                        <para>This operation does not require a
                            request body.</para>
                        <example>
                            <title>Backup Database Instance Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
   "backup": {
      "description": "&lt;backup_description>",
      "instance": "&lt;instance_id>",
      "name": "&lt;backup_name>"
   }
}' \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/backups</uri> | python -m json.tool</programlisting>
                        </example>
                        <para>Remember to replace the names in the
                            example above with their actual respective
                                values:<itemizedlist spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >backup_description</emphasis>
                                   &mdash; description for the
                                   backup</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="create-manage-database"
                                   />)</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >backup_name</emphasis> &mdash;
                                   name of the backup</para>
                                </listitem>
                            </itemizedlist></para>
                    </step>
                    <step>
                        <para>The following example shows the response
                            for List Users in Database
                            Instance:</para>
                        <example>
                            <title>Backup Database Instance Response:
                                JSON</title>
                            <programlisting language="json">HTTP/1.1 202 Accepted
Content-Type: application/json
Via: 1.1 Repose (Repose/2.6.7)
Content-Length: 267
Date: Thu, 27 Jun 2013 19:47:55 GMT
Server: Jetty(8.0.y.z-SNAPSHOT)
 
{
    "backup": {
        "created": "2013-06-27T19:47:55", 
        "description": "My Backup", 
        "id": "8c40f9c2-6fe8-4b6b-a823-8a6b1d181f09", 
        "instance_id": "f07ac506-1a99-4a2a-9a32-869b453019ef", 
        "locationRef": null, 
        "name": "snapshot", 
        "status": "NEW", 
        "updated": "2013-06-27T19:47:55"
    }
}</programlisting>
                        </example>
                        <para>You can see that the backups were
                            successfully created.</para>
                    </step>
                </procedure>
                <para>This concludes the <citetitle>Getting
                        Started</citetitle>. Thank you for using
                    Rackspace Cloud products.</para>
            </section>
        </section>
        <section xml:id="configure-time-zones">
            <title>Configure time zonesp</title>
            <?dbhtml stop-chunking?>
            <para>The server time zone for a set of current and future
                database instances can be set using the configuration
                groups feature of Cloud Databases. Suppose you want to
                set the default time zone for a set of database
                instances.</para>
            <para>The server time zone is set in MySQL in the
                    <code>default_time_zone</code> parameter, and the
                default value is ‘SYSTEM’. You can set the time zone
                in MySQL using either:<itemizedlist>
                    <listitem>
                        <para>named time zones</para>
                    </listitem>
                    <listitem>
                        <para>UTC (Coordinated Universal Time)
                            offsets</para>
                    </listitem>
                </itemizedlist></para>
            <para>To set the time zone using named time zones, use the
                appropriate name for your zone, such as
                "Europe/London" or "US/Eastern" to set the
                    <code>default_time_zone</code>, for example:<itemizedlist>
                    <listitem>
                        <para><code>{"default_time_zone”:"Europe/London”}</code></para>
                    </listitem>
                    <listitem>
                        <para><code>{"default_time_zone”:"US/Eastern”}</code></para>
                    </listitem>
                </itemizedlist>For more information about named time
                zones, see the MySQL documentation at <link
                    xlink:href="http://dev.mysql.com/doc/refman/5.6/en/time-zone-support.html"
                    >http://dev.mysql.com/doc/refman/5.6/en/time-zone-support.html</link>.</para>
            <para>To set the <code>default_time_zone</code> using
                offsets of the time zone from <link
                    xlink:href="http://en.wikipedia.org/wiki/Coordinated_Universal_Time"
                    >UTC (Coordinated Universal Time)</link>, use the
                appropriate offset value for your zone. For example
                the CST (Central Standard Time) time zone would be "-6:00":<itemizedlist>
                    <listitem>
                        <para><code>{"default_time_zone":"-6:00”}</code></para>
                    </listitem>
                </itemizedlist></para>
            <para>If you lived in the AEST (Australian Eastern
                Standard Time) time zone on the other hand, the offset
                would be "+10:00".</para>
            <para> You can set <code>default_time_zone</code> in a
                configuration group that can be applied to your
                database instance. You can create a new configuration
                group just for the time zone management, or add the
                time zone parameter to an existing configuration
                group. </para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref
                                linkend="configuring-time-zones-trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para>
                            <xref linkend="configuring-time-zones-curl"/>
                        </para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="configuring-time-zones-trove">
                <title>Configuring the time zone by using the trove
                    client</title>
                <?dbhtml stop-chunking?>
                <procedure>
                    <title>To create a new configuration group to add
                        custom time zone information to your database
                        instance with the trove client:</title>
                    <step>
                        <para>Create a configuration group named
                                <code>TimeConfig</code> that sets the
                            time zone to CST (Central Standard
                            Time).</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-create TimeConfig '{"default_time_zone":"-6:00"}' --datastore MySQL</programlisting>
                        <para>The command returns the id and name for
                            the configuration group among the other
                            information:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+----------------------+--------------------------------------+
|       Property       |                Value                 |
+----------------------+--------------------------------------+
| datastore_version_id | 20000000-0000-0000-0000-000000000002 |
|     description      |                 None                 |
|          id          | 00f6070d-27f1-4af2-8388-4cae33899c0c |
|         name         |              TimeConfig              |
|        values        |    {"default_time_zone": "-6:00"}    |
+----------------------+--------------------------------------+
</computeroutput></screen>
                        </informalexample>
                        <para>As an alternative, you could use a named
                            time zone instead of the UTC
                            offset.</para>
                    </step>
                    <step>
                        <para>Apply the new configuration group to
                            your existing database instance (created
                            in <xref linkend="create-manage-database"
                            />).</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-attach &lt;config_id> &lt;instance_id>  </programlisting>
                        <para>Remember to replace the variables in the
                            example above with their actual respective
                                values:<itemizedlist spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >config_id</emphasis> &mdash; as
                                   returned in your create
                                   configuration response (see Step 1
                                   above).</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="create-manage-database"
                                   />)</para>
                                </listitem>
                            </itemizedlist></para>
                        <para>This command does not return any
                            output.</para>
                    </step>
                </procedure>
                <note>
                    <para> The Cloud Databases instance will need to
                        be restarted before the time zone setting
                        takes effect. </para>
                </note>
                <procedure>
                    <title>To add custom time zone information to an
                        existing configuration group with the trove
                        client:</title>
                    <step>
                        <para>Set the <code>default_time_zone</code>
                            parameter on an existing configuration
                            group by running the
                                <command>configuration-patch</command>
                            command with the trove client. </para>
                        <para>The following command would add the IST
                            (India Standard Time, +6:00) time zone to
                            a configuration group with id
                            &lt;config_id>: </para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-patch &lt;config_id> '{"default_time_zone":"+6:00"}'</programlisting>
                        <para>This command does not return any
                            output.</para>
                    </step>
                </procedure>
                <procedure>
                    <title>To check the server time zone:</title>
                    <step>
                        <para> You can check the current time zone
                            setting for an instance by <link
                                xlink:href="http://ord.admin.kc.rakr.net/knowledge_center/article/connecting-to-your-cloud-database"
                                >logging in to the mysql
                                console</link> and querying the value
                            of <code>global.time_zone</code>: </para>
                        <programlisting language="bash" role="gutter: false">SELECT @@global.time_zone;  </programlisting>
                        <para>The returned value will show the
                            instance's current time zone setting, for
                            example:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
  +--------------------+ | @@global.time_zone | +--------------------+ | +06:00             |
      +--------------------+  
</computeroutput></screen>
                        </informalexample>
                        <para>If the time zone does not reflect what
                            you set in the configuration group
                            attached to the instance, the instance may
                            need to be restarted in order for the
                            change to take effect. </para>
                    </step>
                </procedure>
            </section>
            <section xml:id="configuring-time-zones-curl">
                <title>Configuring time zones by using cURL</title>
                <?dbhtml stop-chunking?>
                <procedure>
                    <title>To create a new configuration group to add
                        custom time zone information to your database
                        instance with cURL:</title>
                    <step>
                        <para>Create a configuration group named
                                <code>TimeConfig</code> that sets the
                            time zone to CST by executing the request
                            below:</para>
                        <example>
                            <title>Create Configuration Group Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
  "configuration": {
    "datastore": {
      "type": "10000000-0000-0000-0000-000000000001",
      "version": "20000000-0000-0000-0000-000000000002"
    },
    "description": "Test config",
    "name": "test-configuration",
    "values": {
      "default_time_zone": "-6:00"
    }
  }
}' \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/configurations </uri> | python -m json.tool</programlisting>
                            <para>As an alternative, you could use a
                                named time zone instead of the UTC
                                offset.</para>
                        </example>
                        <para>The following example shows the response
                            for Create Configuration Group
                            Request:</para>
                        <example>
                            <title>Create Configuration Group
                                Response: JSON</title>
                            <programlisting language="json">
{
    "configuration": {
        "datastore_version_id": "20000000-0000-0000-0000-000000000002", 
        "description": "Test config", 
        "id": "63c6e164-2324-4eaa-a3d8-d79528a26e7d", 
        "name": "test-configuration", 
        "values": {
            "default_time_zone": "-6:00"
        }
    }
}</programlisting>
                        </example>
                    </step>
                    <step>
                        <para>Apply the new configuration group to
                            your existing database instance (created
                            in <xref linkend="create-manage-database"
                            />).</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{ 
   "instance": {
      "configuration": "&lt;config_id>" 
   }
}' \
<option>-X PUT</option> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/instances/&lt;instance_id> </uri></programlisting>
                        <para>Remember to replace the following
                            variables in the example above with their
                            actual respective values:<itemizedlist
                                spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >config_id</emphasis> &mdash; as
                                   returned in your Create
                                   Configuration Group response in
                                   Step 1 above.</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="create-manage-database"
                                   />)</para>
                                </listitem>
                            </itemizedlist></para>
                        <para>The command does not return a response
                            body:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
HTTP/1.1 202 Accepted
Content-Type: application/json
Via: 1.1 Repose (Repose/2.12)
Content-Length: 0
Date: Fri, 02 May 2014 15:18:56 GMT
Server: Jetty(8.0.y.z-SNAPSHOT)</computeroutput></screen>
                        </informalexample>
                    </step>
                </procedure>
                <note>
                    <para> The Cloud Databases instance will need to
                        be restarted before the time zone setting
                        takes effect. </para>
                </note>
                <procedure>
                    <title>To add custom time zone information to an
                        existing configuration group with
                        cURL:</title>
                    <step>
                        <para>Set the <code>default_time_zone</code>
                            parameter on an existing configuration
                            group by running the Update Some
                            Configuration Parameters request with
                            cURL. </para>
                        <para>The following request would update the
                                <code>default_time_zone</code> from
                            CST (Central Standard Time, -6:00) to IST
                            (India Standard Time, +6:00) time zone to
                            a configuration group with id
                            &lt;config_id>: </para>
                        <programlisting language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{
    "configuration": {
       "values": {
           "default_time_zone": "+6:00"
       }
   }
}' \
<option>-X PATCH</option> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/configurations/&lt;config_id> </uri></programlisting>
                        <para>The command does not return a response
                            body:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
HTTP/1.1 200 OK
Content-Type: application/json
Via: 1.1 Repose (Repose/2.12)
Content-Length: 0
Date: Fri, 02 May 2014 15:44:43 GMT
Server: Jetty(8.0.y.z-SNAPSHOT)</computeroutput></screen>
                        </informalexample>
                    </step>
                </procedure>
                <procedure>
                    <title>To check the server time zone:</title>
                    <step>
                        <para> You can check the current time zone
                            setting for an instance by <link
                                xlink:href="http://ord.admin.kc.rakr.net/knowledge_center/article/connecting-to-your-cloud-database"
                                >logging in to the mysql
                                console</link> and querying the value
                            of <code>global.time_zone</code>: </para>
                        <programlisting language="bash" role="gutter: false">SELECT @@global.time_zone;  </programlisting>
                        <para>The returned value will show the
                            instance's current time zone setting, for
                            example:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
  +--------------------+ | @@global.time_zone | +--------------------+ | +06:00             |
      +--------------------+  
</computeroutput></screen>
                        </informalexample>
                        <para>If the time zone does not reflect what
                            you set in the configuration group
                            attached to the instance, the instance may
                            need to be restarted in order for the
                            change to take effect. </para>
                    </step>
                </procedure>
            </section>
        </section>
    </chapter>
    
</book>
