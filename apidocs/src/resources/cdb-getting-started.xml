<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">

        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
        
        <!-- changing authentication endpoints; define entities for US & UK rather than maintaining in text -->
        <!ENTITY ENDPOINT-US "https://identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-UK "https://lon.identity.api.rackspacecloud.com/v1.1/">
        <!ENTITY ENDPOINT-US-20 "https://identity.api.rackspacecloud.com/v2.0/">
        <!ENTITY ENDPOINT-UK-20 "https://lon.identity.api.rackspacecloud.com/v2.0/">

        <!-- Useful for specs -->
        <!ENTITY MAY    '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MAY</emphasis>'>
        <!ENTITY SHOULD '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">SHOULD</emphasis>'>
        <!ENTITY MUST   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST</emphasis>'>
        <!ENTITY MUST_NOT   '<emphasis xmlns="http://docbook.org/ns/docbook" role="strong">MUST NOT</emphasis>'>
]>

<book version="5.0"
         xmlns="http://docbook.org/ns/docbook"
         xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:svg="http://www.w3.org/2000/svg"
         xmlns:m="http://www.w3.org/1998/Math/MathML"
         xmlns:html="http://www.w3.org/1999/xhtml"
         xml:id="cdb-getting-started">
    
    <?rax title.font.size="35px" subtitle.font.size="20px"?>
    <title>Rackspace Cloud Databases Getting Started Guide</title>
    <titleabbrev>Rackspace Cloud Databases and Servers Getting Started Guide</titleabbrev>
     
    <info>
        
        <copyright>
            <year>2011</year>
            <year>2012</year>
            <year>2013</year>
            <year>2014</year>
            <year>2015</year>
            <holder>Rackspace US, Inc.</holder>
        </copyright>
        <releaseinfo>API v1.0</releaseinfo>
        <productname>Rackspace Cloud Databases</productname>
        <pubdate>2015-06-15</pubdate>
        <legalnotice role="rs-api">
            <annotation>
                <remark>Copyright details are filled in by the template.</remark>
            </annotation>
        </legalnotice>
        <revhistory>
            <revision>
                <date>2014-06-15</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added new trove commands for High
                                Availability in <xref
                                   linkend="trove_summary_ha"/> and
                                   <xref
                                   linkend="trove_summary_replication"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-03-11</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added new trove command List
                                replicas for source instance in <xref
                                   linkend="trove_summary_replication"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-01-29</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added new
                                trove command List flavors for
                                datastore version in <xref
                                   linkend="trove_summary_flavors"
                                />.</para>
                        </listitem>
                        <listitem>
                            <para>Added new
                                trove command View verbose default
                                configuration parameters in <xref
                                   linkend="trove_configurations"
                                />.</para>
                        </listitem>
                        <listitem>
                            <para>Removed
                                London endpoint, since we now have one
                                global endpoint for the Rackspace
                                Authentication Service. See <xref
                                   linkend="Generating_Auth_Token"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-12-09</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated optional arguments for trove
                                   <code>backup-create</code> command
                                in <xref
                                   linkend="trove_summary_backups"
                                />.</para>
                        </listitem>
                        <listitem>
                            <para>Added trove commands for replication
                                in <xref
                                   linkend="trove_summary_replication"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-10-09</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Fixed cURL option  for example in
                                   <xref
                                   linkend="List_Users_In_Instance_CURL"
                                />.</para>
                        </listitem>
                        <listitem>
                            <para>Fixed order of arguments for example
                                in <xref
                                   linkend="Backup_Instance_Trove"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-10-09</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Moved section on "Using SSL with
                                Your Cloud Database Instances" to the
                                   <citetitle>Rackspace Cloud
                                   Databases Developer
                                   Guide</citetitle>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-10-08</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added information for using named
                                time zones in configurations. See
                                   <xref
                                   linkend="Managing_TZ_for_Database_Instances"
                                /> for details.</para>
                        </listitem>
                        <listitem>
                            <para>Added section on "Using SSL with
                                Your Cloud Database Instances".</para>
                        </listitem>
                        <listitem>
                            <para>Updated syntax order for
                                python-troveclient CLI commands
                                   <code>backup-create</code> and
                                   <code>configuration-attach</code>.
                                See <xref
                                   linkend="trove_summary_backups"/>
                                and <xref
                                   linkend="trove_configurations"/>
                                respectively for details.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-09-30</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated link to <link
                                   xlink:href="http://feedback.rackspace.com"
                                   >Product Feedback
                                Forum</link>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-08-14</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added information that the default
                                datastore type and version is MySQL
                                5.1 for the datacenters SYD and HKG
                                only. For all other datacenters, the
                                default datastore type and version is
                                MySQL 5.6.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-08-13</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated link to <link
                                xlink:href="http://feedback.rackspace.com"
                                >Product Feedback Forum</link>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-08-04</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated information about choosing
                                which regionalized endpoint to use in
                                   <xref
                                   linkend="Service_Access_Endpoints-d1e753"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-07-23</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added information about choosing
                                which regionalized endpoint to use in
                                   <xref
                                   linkend="Service_Access_Endpoints-d1e753"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-07-21</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added MySQL 5.1 to the Document
                                Change History entry for July 18,
                                2014.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-07-18</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Multiple database engines are now
                                supported: MySQL 5.6, MySQL 5.1,
                                Percona 5.6, and MariaDB 10.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-06-19</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated information for locating
                                your account number (tenant ID) in the
                                Cloud Control Panel (see <xref
                                   linkend="Generating_Auth_Token"
                                />).</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-06-19</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated information for locating
                                your account number (tenant ID) in the
                                Cloud Control Panel (see <xref
                                   linkend="Generating_Auth_Token"
                                />).</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-05-21</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Corrected argument for trove CLI
                                command
                                   <code>configuration-parameter-list</code>
                                (see <xref
                                   linkend="trove_configurations"
                                />).</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-05-06</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added <xref
                                   linkend="Managing_TZ_for_Database_Instances"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-04-29</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Removed XML data serialization
                                format as announced on February, 17,
                                2014.</para>
                        </listitem>
                        <listitem>
                            <para>Updated examples as needed.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-03-31</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added trove client commands for
                                configurations in <xref
                                   linkend="trove_configurations"
                                />.</para>
                        </listitem>
                        <listitem>
                            <para>Updated examples as needed.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-02-17</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added note regarding deprecation of
                                XML data serialization format in <xref
                                   linkend="DB_Overview"/>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-01-30</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Corrected link for "Create Database"
                                in <xref linkend="Create_DB_Instance"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2014-01-16</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Corrected environment variable
                                   <code>OS_TENANT_NAME</code> for
                                python-troveclient to be
                                   <code>OS_TENANT_ID</code>. See
                                   <xref
                                   linkend="Install_Trove_Client"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-12-11</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Revised information for locating
                                your API Key and account number in the
                                Cloud Control Panel. See <xref
                                   linkend="Generating_Auth_Token"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-11-21</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated information for <xref
                                   linkend="DB_copy_paste_examples"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-10-28</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added Hong Kong (HKG) endpoint. See
                                   <xref
                                   linkend="Service_Access_Endpoints-d1e753"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-10-24</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Restructured the guide to provide
                                information for using both trove
                                Python client and cURL
                                commands.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-09-26</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added Northern Virginia (IAD)
                                endpoint. See <xref
                                   linkend="Service_Access_Endpoints-d1e753"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-06-17</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated authentication information.
                                See <xref
                                   linkend="Generating_Auth_Token"
                                />.</para>
                        </listitem>
                        <listitem>
                            <para>Added Sydney (SYD) endpoint. See
                                   <xref
                                   linkend="Service_Access_Endpoints-d1e753"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-04-03</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated response examples for new
                                8GB and 16GB flavors in <xref
                                   linkend="List_Flavors"/>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-03-28</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated response examples for
                                Flavors API calls in <xref
                                   linkend="List_Flavors"/>.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2013-02-21</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Corrected link for reference to
                                   <link
                                   xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createDatabase__version___accountId__instances__instanceId__databases_.html"
                                   >Create Database</link> in <xref
                                   linkend="Create_DB_Instance"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-11-15</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Fixed broken link (<link
                                   xlink:href="http://www.rackspace.co.uk"
                                   >http://www.rackspace.co.uk</link>)
                                in <xref
                                   linkend="Generating_Auth_Token"
                                />.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-10-29</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated information for cURL
                                command-line options (see <xref
                                   linkend="DB_using-curl-cli"
                                />).</para>
                        </listitem>
                        <listitem>
                            <para>Updated service catalog info for
                                auth response examples (refer to <xref
                                   linkend="Generating_Auth_Token"
                                />).</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-09-04</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Updated auth response examples
                                (refer to <xref
                                   linkend="Generating_Auth_Token"
                                />).</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-09-04</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Added information for pricing and
                                service level (refer to <xref
                                   linkend="Pricing_SLA-d1e1362"
                                />).</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-08-02</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Corrected request examples for
                                authentication (refer to <xref
                                   linkend="Generating_Auth_Token"
                                />).</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>
            <revision>
                <date>2012-08-01</date>
                <revdescription>
                    <itemizedlist spacing="compact">
                        <listitem>
                            <para>Initial Unlimited Availability (UA)
                                release for Rackspace Cloud
                                Databases.</para>
                        </listitem>
                    </itemizedlist>
                </revdescription>
            </revision>           
        </revhistory>
    <raxm:metadata xmlns:raxm="http://docs.rackspace.com/api/metadata">
      <raxm:displayname>Getting Started Guide</raxm:displayname>
      <raxm:product version="v1.0">cdb</raxm:product>
      <raxm:priority>10</raxm:priority>
    </raxm:metadata> 
    </info>
    <chapter xml:id="DB_Overview">
        <title>Overview</title>
        <para>Follow the steps described in this guide to use the
            Rackspace Cloud Databases API and the Cloud
            Servers<trademark/> section of the Rackspace Cloud Control
            Panel to create and access your database instances via
            Rackspace Cloud Servers. The examples presented in this
            guide create a MySQL database instance.</para>
        
        <para>The simple exercises in this guide help you get started
            with the API by showing you how to access the API through
            either trove client commands or cURL commands. </para>
        <para>For each exercise in this guide, you choose one of the
            following methods to make API calls: <itemizedlist>
                <listitem>
                    <para>The <emphasis role="bold">trove client
                            commands</emphasis>. trove provides easy
                        command line access to the database API
                        operations. We recommend that you use the
                        trove client to run simple commands that make
                        API calls. You can specify a
                            <code>--debug</code> parameter on any
                        trove command to show the underlying API
                        request for the command. This is a good way to
                        become familiar with the API requests. </para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold"><link
                                xlink:href="http://curl.haxx.se/"
                                >cURL</link> commands</emphasis>. If
                        you are familiar with or want to learn cURL
                        commands, choose this method. With cURL, you
                        send HTTP requests with embedded API calls
                        from the command line. The cURL examples in
                        this guide include request bodies in JSON
                        format. See <xref linkend="curl"/>.</para>
                </listitem>
            </itemizedlist>If you like, you can use cURL in one
            example and switch to the trove client in the next
            example. If you choose to use a cURL command for any
            example, you must export the environment variables
            required to run the cURL examples. See <xref
                linkend="Export_CURL_ENV_VARS"/>. </para>
        
        <para>To use the API, it helps to be familiar with HTTP 1.1,
            RESTful web services, the Rackspace Cloud Servers service,
            and JSON data serialization format.</para>
        
        
       
        <section xml:id="Additional_Info-dle5378">
            <title>Additional Sources of Information</title>
            <para>For details about using the Cloud Databases API, refer
                to the <citetitle>Cloud Databases Developer
                    Guide</citetitle> at <link
                        xlink:href="http://docs.rackspace.com/"
                        >http://docs.rackspace.com/</link>.</para>
            <para>For more details about Rackspace Cloud Databases, refer
                to <link
                    xlink:href="http://www.rackspace.com/cloud/databases/"
                    >http://www.rackspace.com/cloud/databases/</link>.
                This site also offers links to Rackspace's official
                support channels, including knowledge center articles,
                forums, phone, chat, and email. </para>
            <para>For information about using the Rackspace Monitoring
                CLI (Command Line Interface) to monitor your
                infrastructure, refer to <link
                    xlink:href="http://www.rackspace.com/knowledge_center/article/getting-started-with-rackspace-monitoring-cli"
                    >http://www.rackspace.com/knowledge_center/article/getting-started-with-rackspace-monitoring-cli</link>. </para>
            <para>Please visit our <link
                xlink:href="http://feedback.rackspace.com"
                >Product Feedback Forum</link> and let us know what
                you think about Cloud Databases!</para>
        </section>
        
        <section xml:id="Prerequisites_Examples">
            <title>Prerequisites for Running Examples</title>
            <para>In order to run the examples in this guide, you must
                have the following prerequisites: <itemizedlist
                    spacing="compact">
                    <listitem>
                        <para>Rackspace Cloud account</para>
                    </listitem>
                    <listitem>
                        <para>Rackspace Cloud username and password,
                            as specified during registration</para>
                    </listitem>
                </itemizedlist></para>
        </section>
        
        <section xmlns="http://docbook.org/ns/docbook"
            xmlns:xi="http://www.w3.org/2001/XInclude"
            xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
            xml:id="troveclient">
            <title>How the trove Client Works</title>
            <para>The trove client is an open-source Python client
                that lets you run simple commands to make API calls.
                This client is easy to learn and use. Each trove
                client command runs cURL commands that embed API
                requests. You can run the trove client from a desktop
                machine or remote system, such as a Cloud Server. </para>
            <para>You install the trove client on a Linux distribution
                or on Mac OS X. You install the trove client in <xref
                    linkend="Install_Trove_Client"/>. </para>
            <para>To configure the trove client, you update your
                .bash_profile file (or .bashrc) to set and export
                trove environment variables. </para>
            <note>
                <para>You can specify the <code>--debug</code>
                    parameter on any trove command to show the
                    underlying API request for the command. This is a
                    good way to become familiar with the API requests. </para>
            </note>
            <para>Rackspace does not maintain the trove client, which
                is considered to be software in development. </para>
        </section>
        
        <section xmlns="http://docbook.org/ns/docbook"
            xmlns:xi="http://www.w3.org/2001/XInclude"
            xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
            xml:id="curl">
            <title>How cURL Commands Work</title>
            <para>cURL is a command-line tool that you can use to interact
                with <glossterm>REST</glossterm> interfaces. cURL lets you to
                transmit and receive <glossterm>HTTP</glossterm> requests and
                responses from the command line or a shell script, which
                enables you to work with the API directly. It is available for
                Linux distributions, Mac OS X, and Windows. For information
                about cURL, see <link xlink:href="http://curl.haxx.se/"
                    >http://curl.haxx.se/</link>. </para>
            <para security="writeronly">To use JSON requests and responses, see <xref
                    linkend="curl_summary_json"/>.</para>
            
            <para>To run the cURL request examples shown in this guide, copy
                each example from the HTML version of this guide directly to
                the command line or a script.</para>
            
            <para>The following command is an example cURL command for
                a JSON request that provisions a server with an
                isolated network:</para>
            
            <example xml:id="JSON_Example">
                <title>cURL Command Example: JSON Request </title><programlisting language="bash" role="gutter: false"><?db-font-size 60%?><prompt>$</prompt> curl https://dfw.servers.api.rackspacecloud.com/v2/$account/servers \
       -X POST \
       -H "X-Auth-Project-Id: $account" \
       -H "Content-Type: application/json" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" \
       -d '{"server": {"name": "my_server_with_network", "imageRef": "d42f821e-c2d1-4796-9f07-af5ed7912d0e", "flavorRef": "2", "max_count": 1, "min_count": 1, "networks": [{"uuid": "538a112a-34d1-47ff-bf1e-c40639e886e2"}, {"uuid": "00000000-0000-0000-0000-000000000000"}, {"uuid": "11111111-1111-1111-1111-111111111111"}]}}' \
      | python -m json.tool</programlisting></example>
            <note>
                <para>The carriage returns in the cURL request
                    examples are escaped with a backslash
                        (<literal>\</literal>) character. The escape
                    character allows continuation of the command
                    across multiple lines. However, do not include the
                    escape character in the JSON request body within
                    the cURL command.</para>
            </note>
            
            <para>The cURL examples in this guide use the following
                command-line options:</para>
            <table xml:id="curl_options" rules="all" width="75%">
                <caption>cURL Command-Line Options</caption>
                
                <thead>
                    <tr>
                        <th>Option</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <option>-d</option>
                        </td>
                        <td>
                            <para>Sends the specified data in a &POST;
                                request to the HTTP server. Use this
                                option to send a JSON request body to
                                the server.</para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-H</option>
                        </td>
                        <td>
                            <para>Specifies an extra HTTP header in the
                                request. You can specify any number of extra
                                headers. Precede each header with the
                                <option>-H</option> option. </para>
                            <para>Common headers in Rackspace API requests are:<itemizedlist>
                                <listitem>
                                    <para><literal>Content-Type</literal>.
                                        Required for operations with a
                                        request body. </para>
                                    <para>Specifies the format of the
                                        request body. The syntax for the
                                        <literal>Content-Type</literal>
                                        header is:</para>
                                    <screen><computeroutput>Content-Type: application/<parameter>format</parameter></computeroutput></screen>
                                    <para>Where
                                   <parameter>format</parameter> is
                                   <literal>json</literal>.</para>
                                </listitem>
                                <listitem>
                                    <para><literal>X-Auth-Project-Id</literal>.
                                        Optional. Specifies the project ID,
                                        which can be your account number or
                                        another value.</para>
                                </listitem>
                                <listitem>
                                    <para><literal>Accept</literal>.
                                        Optional. </para>
                                    <para>Specifies the format of the
                                        response body. The syntax for the
                                        <literal>Accept</literal> header
                                        is:</para>
                                    <screen><computeroutput>Accept: application/<parameter>format</parameter></computeroutput></screen>
                                    <para>Where
                                   <parameter>format</parameter> is
                                   <literal>json</literal>. Default is
                                   <literal>json</literal>.</para>
                                </listitem>
                                <listitem>
                                    <para><literal>X-Auth-Token</literal>.
                                        Required. Specifies the
                                        authentication token.</para>
                                </listitem>
                            </itemizedlist></para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-i</option>
                        </td>
                        <td>
                            <para>Includes the HTTP header in the output.
                            </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-s</option>
                        </td>
                        <td>
                            <para>Silent or quiet mode. Does not show
                                progress or error messages. Makes cURL mute.<note>
                                   <para>If your cURL command is not
                                   generating any output, try
                                   replacing the <code>-s</code>
                                   option with <code>-i</code>.</para>
                                </note>
                            </para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-T</option>
                        </td>
                        <td>
                            <para>Transfers the specified local file to the
                                remote URL.</para>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <option>-X</option>
                        </td>
                        <td>
                            <para>Specifies the request method to use when
                                communicating with the HTTP server. The
                                specified request is used instead of the
                                default method, which is &GET;. </para>
                        </td>
                    </tr>
                </tbody>
            </table>
            <note xml:id="json_tool">
                <title>json.tool</title>
                <para>For commands that return a response, you can append the
                    following code to the command to call the json.tool to
                    pretty-print output: </para>
                <programlisting language="bash" role="gutter: false">| python -m json.tool</programlisting>
                <para>To use the json.tool, import the json module. For
                    information about the json.tool, see <link
                        xlink:href="http://docs.python.org/2/library/json.html"
                        >json — JSON encoder and decoder</link>. </para>
                <para>If you do not want to pretty-print JSON output, omit
                    this code. </para>
            </note>
            <?hard-pagebreak?>
            
            <section xmlns="http://docbook.org/ns/docbook"
                xmlns:xi="http://www.w3.org/2001/XInclude"
                xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
                xml:id="curl_summary_json" security="writeronly">
                
                <title>JSON Requests and Responses</title>
                <important>
                    <para>As of release 1.0.35, the XML data
                        serialization format in the Cloud Databases
                        API is deprecated and will be removed from the
                        API in 60 days. </para>
                </important>
                <para>The following example shows a cURL command that specifies an
                    XML request body and returns an XML response. The command
                    creates a server:</para>
                <example xml:id="xml_example">
                    <title>cURL Command Example: XML Request and Response</title>
                    <programlistingco>
                        <areaspec>
                            <area xml:id="xml_curl.txt.endpoint"
                                units="linecolumn" coords="1 87"/>
                            <area xml:id="xml_curl.txt.content" units="linecolumn"
                                coords="4 46"/>
                            <area xml:id="xml_curl.txt.accept" units="linecolumn"
                                coords="5 40"/>
                            <area xml:id="xml_curl.txt.file" units="linecolumn"
                                coords="7 29"/>
                            <area xml:id="xml_curl.txt.ppxml" units="linecolumn"
                                coords="7 40"/>
                        </areaspec>
                        <programlisting language="bash" role="gutter: false"><?db-font-size 65%?><prompt>$</prompt> <xi:include href="../../src/resources/samples/xml_curl.txt" parse="text"/></programlisting>
                    </programlistingco>
                </example>
                <para>This example includes the following changes as
                    compared to the JSON request in <xref
                        linkend="JSON_Example"/>:<calloutlist>
                        <callout arearefs="xml_curl.txt.endpoint">
                            <para>Append <literal>.xml</literal> to
                                the endpoint in the cURL command to
                                return an XML response.</para>
                        </callout>
                        <callout arearefs="xml_curl.txt.content">
                            <para>The <literal>Content-Type:</literal>
                                header specifies
                                   <literal>application/xml</literal>
                                instead of
                                   <literal>application/json</literal>.
                            </para>
                        </callout>
                        <callout arearefs="xml_curl.txt.accept">
                            <para>The <literal>Accept:</literal>
                                header specifies
                                   <literal>application/xml</literal>
                                instead of
                                   <literal>application/json</literal>.
                            </para>
                        </callout>
                        <callout arearefs="xml_curl.txt.file">
                            <para>If the request requires a request
                                body, specify it in XML format. In
                                this example, the XML body is passed
                                in the
                                   <filename>server_post_req.xml</filename>
                                file.</para>
                        </callout>
                        <callout arearefs="xml_curl.txt.ppxml">
                            <para>To pretty-print the XML output, set
                                the <literal
                                   xmlns:svg="http://www.w3.org/2000/svg"
                                   xmlns:m="http://www.w3.org/1998/Math/MathML"
                                   xmlns:html="http://www.w3.org/1999/xhtml"
                                   xmlns:db="http://docbook.org/ns/docbook"
                                   >ppxml</literal> alias, as follows: </para>
                            <programlisting language="bash" role="gutter: false"><?db-font-size 50%?><prompt>$</prompt> alias ppxml='python -c "import sys, xml.dom.minidom; print xml.dom.minidom.parseString(sys.stdin.read()).toprettyxml()"'</programlisting>
                            <para
                                xmlns:svg="http://www.w3.org/2000/svg"
                                xmlns:m="http://www.w3.org/1998/Math/MathML"
                                xmlns:html="http://www.w3.org/1999/xhtml"
                                xmlns:db="http://docbook.org/ns/docbook"
                                >Then, append the
                                   <literal>ppxml</literal> alias to
                                your cURL command. </para>
                        </callout>
                    </calloutlist></para>
                
                
                
                <para>The following example shows the contents of the
                    <filename>server_post_req.xml</filename> file:</para>
                <programlisting language="xml"><?db-font-size 55%?><xi:include href="../../src/resources/samples/server-post-req.xml" parse="text"/></programlisting>
                <?hard-pagebreak?>
                <para><emphasis role="bold">Response:</emphasis> The
                    cURL command returns information about the new
                    server in XML format, as shown in the following
                    example:</para>
                
                
                
                
                <programlisting language="xml"><?db-font-size 65%?><xi:include href="../../src/resources/samples/server-post-resp.xml" parse="text"/></programlisting>
                
                
            </section>
            
        </section>
        <section xml:id="Pricing_SLA-d1e1362">
            <title>Pricing and Service Level</title>
            <para>Cloud Databases is part of the Rackspace Cloud and
                your use through the API will be billed as per the
                pricing schedule at <link
                    xlink:href="http://www.rackspace.com/cloud/databases/pricing/"
                    >http://www.rackspace.com/cloud/databases/pricing/</link>.
                Cloud Servers is also part of the Rackspace Cloud and
                your use through the Cloud Control Panel will be
                billed as per the pricing schedule at <link
                    xlink:href="http://www.rackspace.com/cloud/servers/"
                    >http://www.rackspace.com/cloud/servers/</link>.</para>
            <para>The Service Level Agreements (SLAs) for Cloud
                Databases and Cloud Servers are available at <link
                    xlink:href="http://www.rackspace.com/information/legal/cloud/sla#cloud_databases"
                    >http://www.rackspace.com/information/legal/cloud/sla#cloud_databases</link>
                and <link
                    xlink:href="http://www.rackspace.com/information/legal/cloud/sla#cloud_servers"
                    >http://www.rackspace.com/information/legal/cloud/sla#cloud_servers</link>
                respectively.</para>
            <para>If you elect to use the Backups API in Cloud
                Databases, your backups are stored using Cloud Files
                and your use through the API will be billed as per the
                pricing schedule at <link
                    xlink:href="http://www.rackspace.com/cloud/files/pricing/"
                    >http://www.rackspace.com/cloud/files/pricing/</link>.
                See <xref linkend="Backup_Database_Instance"/> for
                information about backing up a database instance using
                the API. </para>
            <para>The Service Level Agreement (SLA) for Cloud Files is
                available at <link
                    xlink:href="http://www.rackspace.com/information/legal/cloud/sla#cloud_files"
                    >http://www.rackspace.com/information/legal/cloud/sla#cloud_files</link>.</para>
        </section>
    </chapter>
    <chapter xml:id="Create_Cloud_Database"><title>Create Your First Cloud Database</title>
        <section xml:id="Install_Trove_Client">
            <title>Step 1. Install the trove Client</title>
            <para audience="gsonly">If you want to run the cURL
                examples, skip this step and proceed to <xref
                    linkend="Export_CURL_ENV_VARS"/>. </para>
            <para>To manage your databases from the command line, you
                can use the open-source trove client application
                called <literal>trove</literal>. </para>
            <para>To install the trove client, you first install the
                    <literal>python-troveclient</literal> package. </para>
            <note>
                <para>The trove client is not maintained by Rackspace
                    and should be considered software in development.
                    You can post bug reports at <link
                        xlink:href="https://bugs.launchpad.net/python-troveclient/+bugs"
                        >https://bugs.launchpad.net/python-troveclient/+bugs</link>.</para>
            </note>
            <para>Before you begin, install the following prerequisite
                    software:<table rules="all" width="90%">
                    <caption>trove Client Prerequisite
                        Software</caption>
                    <col width="25%"/>
                    <col width="75%"/>
                    <thead>
                        <tr>
                            <th>Prerequisite</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td valign="top">
                                <para>Python 2.7 or later</para>
                            </td>
                            <td>
                                <para>Currently, the trove client is
                                   tested with Python 2.7. </para>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top">
                                <para><command>setuptools</command>
                                   package </para>
                            </td>
                            <td>
                                <para>Installed by default on Mac OS
                                   X. </para>
                                <para>Many Linux distributions provide
                                   packages to make
                                   <command>setuptools</command> easy
                                   to install.</para>
                                <para>Search your package manager for
                                   <command>setuptools</command> to
                                   find an installation package. If
                                   you cannot find one, download the
                                   <command>setuptools</command>
                                   package directly from <link
                                   xlink:href="http://pypi.python.org/pypi/setuptools"
                                   >http://pypi.python.org/pypi/setuptools</link>.
                                </para>
                            </td>
                        </tr>
                        <tr>
                            <td valign="top"><command>pip</command>
                                package</td>
                            <td>
                                <para>To install the trove client on a
                                   Mac OS X or Linux system, use
                                   <command>pip</command> because it
                                   is easy and ensures that you get
                                   the latest version of the trove
                                   client from the <link
                                   xlink:href="http://pypi.python.org/pypi/python-novaclient/"
                                   >Python Package Index</link>. Also,
                                   it lets you update the package
                                   later on.</para>
                                <para>Install <command>pip</command>
                                   through the package manager for
                                   your system:<itemizedlist>
                                   <listitem>
                                   <para>Mac OS X
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> sudo easy_install pip</programlisting></para>
                                   </listitem>
                                   <listitem>
                                   <para>Ubuntu
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> apt get install python-pip </programlisting></para>
                                   </listitem>
                                   <listitem>
                                   <para>Debian
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> aptitude install python-pip </programlisting></para>
                                   </listitem>
                                   <listitem>
                                   <para>Fedora
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> yum install python-pip</programlisting></para>
                                   </listitem>
                                   <listitem>
                                   <para>CentOS, or RHEL (from EPEL or
                                   another 3rd party repository)
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> yum install python-pip</programlisting></para>
                                   </listitem>
                                   </itemizedlist>
                                </para>
                            </td>
                        </tr>
                    </tbody>
                </table></para>
            <?hard-pagebreak?>
            <procedure>
                <title>To install the trove client:</title>
                <step>
                    <title>Install or update the trove client
                        package</title>
                    <para>The <literal>python-troveclient</literal>
                        package contains the trove client. </para>
                    <para>Run the following command for your operating
                        system to install the
                            <literal>python-troveclient</literal>
                        package:</para>
                    <para>For Ubuntu, Debian, or OS X: </para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> sudo pip install python-troveclient</programlisting>
                    <para>For RHEL, CentOS, or Fedora: </para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> sudo python-pip install python-troveclient</programlisting>
                    <note>
                        <para>If you previously installed the
                                <literal>python-troveclient</literal>
                            package, run the following command for
                            your operating system to upgrade
                            it:</para>
                        <para> For Ubuntu, Debian, or OS X:
                            <programlisting language="bash" role="gutter: false"><prompt>$</prompt> sudo pip install --upgrade python-troveclient</programlisting>
                            For RHEL, CentOS, or Fedora:
                            <programlisting language="bash" role="gutter: false"><prompt>$</prompt> sudo python-pip install --upgrade python-troveclient</programlisting>
                        </para>
                    </note>
                </step>
                <step>
                    <title>Set environment variables</title>
                    <para>Edit your .bash_profile file (or .bashrc) to
                        add and set environment variables that enable
                        the trove client to connect to your Rackspace
                        Cloud account. Use nano or a text editor of
                        your choice to edit your
                            <filename>.bash_profile</filename> or
                            <filename>.bashrc</filename> file
                        (whichever is used in your
                        environment):</para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> nano ~/.bash_profile </programlisting>
                    <para audience="gs">Depending on your account
                        location, add one of the following sets of
                        lines to your bash profile and save the file:<example>
                            <title>US Data Center Example</title>
                            <screen><computeroutput><?db-font-size 65%?>export OS_AUTH_URL=https://identity.api.rackspacecloud.com/v2.0/
export OS_REGION_NAME=DFW
export OS_USERNAME=&lt;username>
export OS_TENANT_ID=&lt;tenant_id>
export TROVE_SERVICE_TYPE=rax:database
export OS_PASSWORD=&lt;password>
export OS_PROJECT_ID=&lt;tenant_id>
</computeroutput></screen>
                        </example><example>
                            <title>UK Data Center Example</title>
                            <screen><computeroutput><?db-font-size 65%?>export OS_AUTH_URL=https://identity.api.rackspacecloud.com/v2.0/
export OS_REGION_NAME=LON
export OS_USERNAME=&lt;username>
export OS_TENANT_ID=&lt;tenant_id>
export TROVE_SERVICE_TYPE=rax:database
export OS_PASSWORD=&lt;password>
export OS_PROJECT_ID=&lt;tenant_id>
</computeroutput></screen>
                        </example></para>
                    <para audience="admin">Then edit the values for
                            <code>username</code>,
                            <code>password</code>,
                            <code>tenant_id</code>, and
                            <code>OS_REGION_NAME</code> (assuming you
                        want to specify a different region than
                            <code>DFW</code> or <code>LON</code>) to
                        provide your information as appropriate.
                        Remember to source the file containing the
                        environment variables after editing (for
                        example: <code>source .bashrc</code>) so that
                        the new settings will take effect immediately. </para>
                    <para audience="admin">The following table
                        describes the environment variables: <table
                            xml:id="Trove_Client_Env_Vars" rules="all"
                            width="100%">
                            <caption>trove Client Environment
                                Variables</caption>
                            <col width="25%"/>
                            <col width="75%"/>
                            <thead>
                                <tr>
                                   <th>Environment Variable</th>
                                   <th>Description</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                   <td>OS_REGION_NAME</td>
                                   <td>
                                   <para>The region that contains the
                                   databases that you want to
                                   manipulate. </para>
                                   <para>You can override the region
                                   by setting the
                                   <literal>--region-name</literal>
                                   command-line option.</para>
                                   </td>
                                </tr>
                                <tr>
                                   <td>TROVE_SERVICE_TYPE</td>
                                   <td>
                                   <para>The Rackspace Cloud service
                                   name that you want the trove client
                                   to access. </para>
                                   </td>
                                </tr>
                                <tr>
                                   <td>OS_AUTH_URL</td>
                                   <td>
                                   <para>The endpoint for the
                                   Rackspace Identity Service, which
                                   the trove client uses for
                                   authentication. </para>
                                   </td>
                                </tr>
                                <tr>
                                   <td>OS_PASSWORD</td>
                                   <td>Your Rackspace Cloud
                                   password.</td>
                                </tr>
                                <tr>
                                   <td>OS_PROJECT_ID</td>
                                   <td>Your project ID. In these
                                   examples, set it to your Rackspace
                                   Cloud account number.</td>
                                </tr>
                                <tr>
                                   <td>OS_TENANT_ID</td>
                                   <td>Your Rackspace Cloud tenant id
                                   (account number).</td>
                                </tr>
                                <tr>
                                   <td>OS_USERNAME</td>
                                   <td>Your Rackspace Cloud user
                                   name.</td>
                                </tr>
                            </tbody>
                        </table></para>
                </step>
                <step>
                    <title>Set permissions on the bash profile or
                        .bashrc file</title>
                    <para>Because the bash profile (or .bashrc)
                        contains a password, set permissions on it so
                        other people cannot read it:</para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> chmod 600 ~/.bash_profile </programlisting>
                </step>
                <step>
                    <title>Source the environment variables</title>
                    <para>To source the variables to make them
                        available in your current shell, run the
                        following command if you set your environment
                        variables in the .bash_profile file:</para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> source ~/.bash_profile </programlisting>
                    <para>Otherwise, run the following command if you
                        set your environment variables in the .bashrc
                        file:</para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> source ~/.bashrc </programlisting>
                </step>
                <step>
                    <title>Test the trove client</title>
                    <para>To verify that you can talk to the API
                        server, authenticate and list
                        flavors:<programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove flavor-list </programlisting></para>
                    <para condition="cn">Then, list database
                        instances:
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove list </programlisting></para>
                </step>
                <step>
                    <title>Get help for trove client commands</title>
                    <para>To get help for trove client commands, run
                        the following command:</para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove help </programlisting>
                    <para>To get help for a specific command, type the
                        command name after the
                            <parameter>help</parameter> parameter, as
                        follows:</para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove help &lt;command_name> </programlisting>
                    <para>You cannot use every command that is listed. For example, Rackspace Cloud Databases does not yet support security groups, 
                        so you cannot use the security group commands.
                        The trove client was written for use with
                        recent development versions of OpenStack, so
                        it includes support for some features that are
                        not available in the Rackspace
                            Cloud.</para>
                    <note>
                        <para>To show and become familiar with the
                            underlying API request for a command,
                            specify the <literal>--debug</literal>
                            parameter as the first parameter on any
                            command. For example:
                            <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove --debug list</programlisting></para>
                    </note>
                    <para>If you can run the trove commands
                        successfully, skip the sections that follow
                        and go directly to <xref
                            linkend="List_Flavors"/> to continue with
                        this guide. Otherwise, continue to the
                        Troubleshooting below.</para>
                </step>
                <step>
                    <title>Troubleshooting</title>
                    <para>Rackspace does not maintain the trove
                        client, which is considered to be software in
                        development. </para>
                    <itemizedlist>
                        <listitem>
                            <para>If you cannot run commands
                                successfully, make sure that you
                                entered your user name, password, and
                                account number correctly in the bash
                                profile (or .bashrc) file. </para>
                        </listitem>
                        <listitem>
                            <para>Enter the following command
                                   <command>trove --debug
                                   flavor-list</command> and check the
                                corresponding cURL command that is
                                displayed to confirm that your
                                settings for user name, password, and
                                account number are correct. </para>
                        </listitem>
                        <listitem>
                            <para>If you need to change any
                                environment variables, either log out
                                and back in or source your bash
                                profile (or .bashrc) file. </para>
                        </listitem>
                        <listitem>
                            <para>To override some environment
                                variable settings, you can use the
                                options that are listed at the end of
                                the <command>trove help</command>
                                output. For example, you can override
                                the <literal>OS_PASSWORD</literal>
                                setting in the bash profile by
                                specifying a password on a trove
                                command, as follows: </para>
                            <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove --os-password &lt;password> list </programlisting>
                            <para>Where
                                   <parameter>password</parameter> is
                                your Rackspace Cloud password.</para>
                        </listitem>
                        <listitem>
                            <para>Try entering the following command
                                (using the --debug
                                option):<programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove --debug flavor-list </programlisting>Then
                                inspect the values reported in the
                                corresponding cURL command that is
                                displayed. Are the values you entered
                                for username, password, and tenant_id
                                correct? If not you need to correct
                                the settings you saved to the
                                .bash_profile or .bashrc file and
                                retry the command.</para>
                        </listitem>
                    </itemizedlist>
                    <para>Once you can run the trove commands
                        successfully, skip the sections that follow
                        and go directly to <xref
                            linkend="List_Flavors"/> to continue with
                        this guide.</para>
                </step>
            </procedure>
        </section>
        <section xml:id="DB_Sending_API_Requests">
            <title>Step 2. Send Requests to the API using cURL,
                Firefox, or rest-client</title>
            <para>You have several options for sending requests
                through an API: </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para>Developers and testers may prefer to use
                        cURL, the command-line tool from <link
                            xlink:href="http://curl.haxx.se/"
                            >http://curl.haxx.se/</link>. </para>
                    <para>With cURL you can send HTTP requests and
                        receive responses back from the command line.
                    </para>
                </listitem>
                <listitem>
                    <para>If you like to use a more graphical
                        interface, the ReST client for Firefox also
                        works well for testing and trying out
                        commands, see <link
                            xlink:href="https://addons.mozilla.org/en-US/firefox/addon/restclient/"
                            >https://addons.mozilla.org/en-US/firefox/addon/restclient/</link>.
                    </para>
                </listitem>
                <listitem>
                    <para>You can also download and install
                        rest-client, a Java application to test
                        ReSTful web services, from <link
                            xlink:href="http://code.google.com/p/rest-client/"
                            >http://code.google.com/p/rest-client/</link>.
                    </para>
                </listitem>
            </itemizedlist>
            <section xml:id="DB_using-curl-cli">
                <title>Send API Requests Using cURL</title>
                <para>cURL is a command-line tool that is available on
                    most UNIX®-like environments and Mac OS X® and can
                    be downloaded for Windows® in order to interact
                    with the ReST interfaces. For more information on
                    cURL, visit <link
                        xlink:href="http://curl.haxx.se/"
                        >http://curl.haxx.se/</link>. </para>
                <para>cURL allows you to transmit and receive HTTP
                    requests and responses from the command-line or
                    from within a shell script. This makes it possible
                    to work with the ReST API directly without using
                    one of the client APIs. </para>
                <para>The following cURL command-line options will be
                    used in this guide to run the examples:</para>
                <table xml:id="curl-options" rules="all" width="75%">
                    <caption>cURL Command-Line Options</caption>
                    <thead>
                        <tr>
                            <th>Option</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <option>-d</option>
                            </td>
                            <td>
                                <para>Sends the specified data in a
                                   &POST; request to the HTTP server.
                                   Use this option to send a JSON
                                   request body to the server.</para>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <option>-H</option>
                            </td>
                            <td>
                                <para>Specifies an extra HTTP header
                                   in the request. You can specify any
                                   number of extra headers. Precede
                                   each header with the
                                   <option>-H</option> option. </para>
                                <para>Common headers in Rackspace API
                                   requests are:<itemizedlist>
                                   <listitem>
                                   <para><literal>Content-Type</literal>.
                                   Required for operations with a
                                   request body. </para>
                                   <para>Specifies the format of the
                                   request body. The syntax for the
                                   <literal>Content-Type</literal>
                                   header is:</para>
                                   <screen><computeroutput>Content-Type: application/<parameter>format</parameter></computeroutput></screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   <literal>json</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>X-Auth-Project-Id</literal>.
                                   Optional. Specifies the project ID,
                                   which can be your account number or
                                   another value.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>Accept</literal>.
                                   Optional. </para>
                                   <para>Specifies the format of the
                                   response body. The syntax for the
                                   <literal>Accept</literal> header
                                   is:</para>
                                   <screen><computeroutput>Accept: application/<parameter>format</parameter></computeroutput></screen>
                                   <para>Where
                                   <parameter>format</parameter> is
                                   <literal>json</literal>. Default is
                                   <literal>json</literal>.</para>
                                   </listitem>
                                   <listitem>
                                   <para><literal>X-Auth-Token</literal>.
                                   Required. Specifies the
                                   authentication token.</para>
                                   </listitem>
                                   </itemizedlist></para>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <option>-i</option>
                            </td>
                            <td>
                                <para>Includes the HTTP header in the
                                   output. </para>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <option>-s</option>
                            </td>
                            <td>
                                <para>Silent or quiet mode. Does not
                                   show progress or error messages.
                                   Makes cURL mute. </para>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <option>-T</option>
                            </td>
                            <td>
                                <para>Transfers the specified local
                                   file to the remote URL.</para>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <option>-X</option>
                            </td>
                            <td>
                                <para>Specifies the request method to
                                   use when communicating with the
                                   HTTP server. The specified request
                                   is used instead of the default
                                   method, which is &GET;. </para>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <note xml:id="json-tool">
                    <title>json.tool</title>
                    <para>For commands that return a response, you can
                        append the following code to the command to
                        call the json.tool to pretty-print output: </para>
                    <programlisting language="bash" role="gutter: false">| python -m json.tool</programlisting>
                    <para>To use the json.tool, import the json
                        module. For information about the json.tool,
                        see <link
                            xlink:href="http://docs.python.org/2/library/json.html"
                            >json — JSON encoder and decoder</link>. </para>
                    <para>If you run a Python version older than 2.6,
                        import the simplejson module and use the
                        simplejson.tool. For information about the
                        simple.json tool, see <link
                            xlink:href="http://simplejson.googlecode.com/svn/tags/simplejson-2.0.9/docs/index.html"
                            >simplejson — JSON encoder and
                            decoder</link>.</para>
                    <para>If you do not want to pretty-print JSON
                        output, omit this code. </para>
                </note>
            </section>
            <section xml:id="DB_copy_paste_examples">
                <title>Copying and Pasting cURL Request Examples into
                    a Terminal Window</title>
                <para>To run the cURL request examples shown in this
                    guide on Linux or Mac systems, select the desired
                    example from the HTML version of this guide by
                    clicking the Select Text icon to the right of the
                    example and then select Edit->Copy. Then paste it
                    into an ASCII editor (for example <emphasis
                        role="bold">vi</emphasis> or <emphasis
                        role="bold">TextEdit</emphasis>). Next modify
                    the example with your required account information
                    and so forth, as detailed in this guide.</para>
                <note>
                    <para>The carriage returns in the cURL request
                        examples that are part of the cURL syntax are
                        escaped with a backslash ('\') in order to
                        avoid prematurely terminating the command.
                        However you should not escape carriage returns
                        inside the JSON message within the
                        command.</para>
                </note>
                <para>Consider the following cURL Authenticate
                    Request: JSON example that is described in detail
                    in <xref linkend="Generating_Auth_Token"/>:</para>
                <example>
                    <title>cURL Authenticate Request: JSON</title>
                    <?dbfo keep-together="always"?>
                    <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {  
          "username": "<emphasis role="bold">your_username</emphasis>",  
          "apiKey": "<emphasis role="bold">your_api_key</emphasis>"}
    }  
}' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python -m json.tool</screen>
                </example>
                <para>You can see that the lines that are part of the
                    cURL command syntax have all been escaped with a
                    backslash ('\') to indicate that the command
                    continues on the next line:</para>
                <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
  
   
(... lines within the JSON portion of the message are not shown in this example)
(... the example only shows lines that are part of cURL syntax)     
     
    
   
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python -m json.tool</screen>
                <para>However the lines <emphasis>within</emphasis>
                    the json portion of the message are
                        <emphasis>not</emphasis> escaped with a
                    backslash ('\') in order to avoid issues with the
                    json processing:</para>
                <screen language="bash">'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {  
          "username": "<emphasis role="bold">your_username</emphasis>",  
          "apiKey": "<emphasis role="bold">your_api_key</emphasis>"}
    }  
}' \</screen>
                <note>
                    <para>The final line of the json message is
                        escaped since the backslash lies
                            <emphasis>outside</emphasis> the json
                        message and continues the cURL command to the
                        next line.</para>
                </note>
                <para>After you are finished modifying the text for
                    the cURL request example with your information
                    (for example <emphasis role="bold"
                            ><code>your_username</code></emphasis> and
                        <emphasis role="bold"
                            ><code>your_api_key</code></emphasis>),
                    paste it into your terminal window. Then execute
                    the cURL command by pressing
                        <guilabel>Enter</guilabel>.</para>
                <para>If you have trouble copying and pasting the
                    examples as described, try typing the entire
                    example on one long line, removing all the
                    backslash line continuation characters.</para>
            </section>
        </section>
        <section xml:id="Generating_Auth_Token">
            <title>Step 3. Generate an Authentication Token</title>
            <para>You need to generate a token if use cURL.</para>
            <para>If you are using trove client, the authentication
                token is generated for you automatically, so please
                skip this section and go to <xref
                    linkend="List_Flavors"/>.</para>
            <para>In order to use the ReST API, you will first need to
                obtain an authentication token, which will need to be
                passed in for each request using the
                    <code>X-Auth-Token</code> header. </para>
            <para>The following example demonstrates how to use cURL
                to obtain the authentication token and the account
                number. You will need to supply the authentication
                token and account number when making subsequent Cloud
                Databases API calls.</para>
            <para>Remember to replace the names in the Authenticate
                Request examples below with their respective
                    values:<itemizedlist spacing="compact">
                    <listitem>
                        <para><emphasis role="bold"
                                >your_username</emphasis> &mdash; The
                            username is your common Rackspace Cloud
                            username, as supplied during
                            registration.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold"
                                >your_api_key</emphasis> &mdash; The
                            key is your API access key.</para>
                        <para><emphasis role="bold">To find your API
                                Key:</emphasis></para>
                        <orderedlist>
                            <listitem>
                                <para>Log in to the Cloud Control
                                   Panel (<link
                                   xlink:href="https://mycloud.rackspace.com"
                                   >https://mycloud.rackspace.com</link>).</para>
                            </listitem>
                            <listitem>
                                <para>On the upper-right side of the
                                   top navigation pane, click your
                                   username.</para>
                            </listitem>
                            <listitem>
                                <para>From the menu, select
                                   <guimenuitem>Account
                                   Settings</guimenuitem>.</para>
                            </listitem>
                            <listitem>
                                <para>In the Login Details section of
                                   the Account Settings page, locate
                                   the <guilabel>API Key</guilabel>
                                   field and click
                                   <guibutton>Show</guibutton>.</para>
                            </listitem>
                            <listitem>
                                <para>Copy the value of the API Key
                                   and paste it into a text editor of
                                   your choice.</para>
                            </listitem>
                            <listitem>
                                <para>Click
                                   <guibutton>Hide</guibutton> to hide
                                   the value of the API Key. </para>
                            </listitem>
                        </orderedlist>
                        <para>You also need your cloud account number.
                            In the documentation, the account number
                            is often referred to as your tenant name
                            or tenant ID (technically, the ID is
                            different from the name, but at Rackspace,
                            they are the same thing). Together, three
                            components—your username, your API Key,
                            and your tenant ID or cloud account
                            number—form the authentication credentials
                            that are required to connect to the
                            Rackspace cloud. To find your tenant ID or
                            cloud account number, locate your username
                            on the upper-right side of the top
                            navigation pane in the Cloud Control
                            Panel. Click your username to display the
                            menu. The tenant ID or account number is
                            the first item in the menu.</para>
                    </listitem>
                </itemizedlist></para>
            <para> Use the following endpoint to access the
                Authentication Service, regardless of US or UK
                identities: </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para><link xlink:href="&ENDPOINT-US-20;"
                            >&ENDPOINT-US-20;</link>
                    </para>
                </listitem>
            </itemizedlist>
            <para> Your account may be based in either the US or the
                UK; this is not determined by your physical location
                but by the location of the Rackspace retail site which
                was used to create your account: </para>
            <itemizedlist spacing="compact">
                <listitem>
                    <para> If your account was created via <link
                            xlink:href="http://www.rackspacecloud.com"
                            >http://www.rackspacecloud.com</link>, it
                        is a US-based account. </para>
                </listitem>
                <listitem>
                    <para> If your account was created via <link
                            xlink:href="http://www.rackspace.co.uk"
                            >http://www.rackspace.co.uk</link>, it is
                        a UK-based account. </para>
                </listitem>
            </itemizedlist>
            <para>Notice that you authenticate using a special URL for
                Cloud authentication services. For example, you may
                use
                    <code>https://identity.api.rackspacecloud.com/v2.0/tokens</code>,
                as shown in the following Authenticate Request
                example. Note that the <code>v2.0</code> component in
                the URL indicates that you are using version 2.0 of
                the Cloud Auth API.</para>
            <example>
                <title>cURL Authenticate Request: JSON</title>
                <?dbfo keep-together="always"?>
                <screen language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "auth":
    {
       "RAX-KSKEY:apiKeyCredentials":
       {  
          "username": "<emphasis role="bold">your_username</emphasis>",  
          "apiKey": "<emphasis role="bold">your_api_key</emphasis>"}
    }  
}' \
<option>-H 'Content-Type: application/json'</option> \
<uri>'https://identity.api.rackspacecloud.com/v2.0/tokens'</uri> | python -m json.tool</screen>
            </example>
            <example>
                <title>Authenticate Response: JSON</title>
                <programlisting language="json"><xi:include href="../../src/resources/samples/db-auth-20.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
            </example>
            <para>The authentication token <code>id</code> is returned
                along with an <code>expires</code> attribute that
                specifies when the token expires. </para>
            <note>
                <title>Notes</title>
                <itemizedlist spacing="compact">
                    <listitem>
                        <para>For all response examples in this guide,
                            the field values you receive in your
                            responses will vary from those shown here
                            since they will be specific to your
                            account.</para>
                    </listitem>
                    <listitem>
                        <para>The information shown in the
                            Authenticate Response example above is for
                            US-based accounts. If you have a UK-based
                            account, you will see the service catalog
                            information for UK-based accounts.</para>
                    </listitem>
                    <listitem>
                        <para>The <code>id</code> attribute in the
                            Authenticate Response specifies the
                            authentication token. Tokens are valid for
                            a finite duration.</para>
                        <para>You will set an environment variable
                                (<code>token</code>) to specify your
                            auth token for the Cloud Databases API
                            calls in <xref
                                linkend="Export_CURL_ENV_VARS"
                            /></para>
                    </listitem>
                    <listitem>
                        <para> The <code>expires</code> attribute
                            denotes the time after which the token
                            will automatically become invalid. A token
                            may be manually revoked before the time
                            identified by the expires attribute;
                                <code>expires</code> predicts a
                            token's maximum possible lifespan but does
                            not guarantee that it will reach that
                            lifespan. Clients are encouraged to cache
                            a token until it expires.</para>
                    </listitem>
                    <listitem>
                        <para>Applications should be designed to
                            re-authenticate after receiving a 401
                            (Unauthorized) response from a service
                            endpoint.</para>
                    </listitem>
                </itemizedlist>
            </note>
            <para>The <code>publicURL</code> endpoints for
                    <code>cloudDatabases</code> (for example
                    <code>https://ord.databases.api.rackspacecloud.com/v1.0/1100111</code>)
                are also returned in the response. </para>
            <para>You will find the actual account number after the
                final '/' in the <code>publicURL</code> field. In this
                example, you can see that the account number is
                1100111. You will set an environment variable
                    (<code>account</code>) to specify your account
                number for the Cloud Databases API calls in <xref
                    linkend="Export_CURL_ENV_VARS"/></para>
            <para>After authentication, you can use cURL to perform
                &GET;, &DELETE;, and &POST; requests for the Cloud
                Databases API.</para>
        </section>
        <section xml:id="Service_Access_Endpoints-d1e753">
            <title>Step 4. Choose Service Access/Endpoints</title>
            <para>If you are using cURL, the endpoints to use for your
                Cloud Databases API calls are summarized in the table
                below.</para>
            <para>If you are using trove client, the endpoints to use
                for your Cloud Databases API calls are set
                automatically by specifying a region, so skip this
                section and go to <xref linkend="List_Flavors"
                /></para>
            <tip>
                <para>To help you decide which regionalized endpoint
                    to use, read about special considerations for
                    choosing a region at <link
                        xlink:href="http://www.rackspace.com/knowledge_center/article/about-regions"
                        >http://www.rackspace.com/knowledge_center/article/about-regions</link>.</para>
            </tip>
            <para>
                <table rules="all">
                    <caption>Regionalized Service Endpoints</caption>
                    <thead>
                        <tr align="center">
                            <td colspan="2">Region</td>
                            <td colspan="5">Endpoint</td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr align="left">
                            <td colspan="2">Chicago (ORD)</td>
                            <td colspan="5"
                                   ><code>https://ord.databases.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Dallas/Ft. Worth
                                (DFW)</td>
                            <td colspan="5"
                                   ><code>https://dfw.databases.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Northern Virginia
                                (IAD)</td>
                            <td colspan="5"
                                   ><code>https://iad.databases.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">London (LON)</td>
                            <td colspan="5">
                                <code>https://lon.databases.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Sydney (SYD)</td>
                            <td colspan="5">
                                <code>https://syd.databases.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/
                            </td>
                        </tr>
                        <tr align="left">
                            <td colspan="2">Hong Kong (HKG)</td>
                            <td colspan="5">
                                <code>https://hkg.databases.api.rackspacecloud.com/v1.0/</code><parameter>1234</parameter>/ </td>
                        </tr>
                    </tbody>
                </table>
            </para>
            <note>
                <title>Notes:</title>
                <itemizedlist>
                    <listitem>
                        <para>Choose the endpoint from the table for
                            the datacenter where your Cloud resources
                            are located.</para>
                    </listitem>
                    <listitem>
                        <para>The Cloud Server that you use in <xref
                                linkend="Create_Cloud_Server"/> must
                            be located in the same datacenter where
                            your database resides.</para>
                    </listitem>
                    <listitem>
                        <para>All examples in this guide assume that
                            you are operating against the ORD
                            datacenter, however if you are using a
                            different datacenter, be sure to use the
                            associated endpoint from the table above
                            instead.</para>
                    </listitem>
                </itemizedlist>
            </note>
            <para>Replace the sample account ID number,
                    <parameter>1234</parameter>, with your actual
                account number returned as part of the authentication
                response. You will set an environment variable
                    (<code>account</code>) to specify your account
                number for the Cloud Databases API calls in <xref
                    linkend="Export_CURL_ENV_VARS"/>. Refer to <xref
                    linkend="Generating_Auth_Token"/> for the account
                number.</para>
            <para>When making a Cloud Databases API call, place the
                endpoint at the beginning of the request URL, for
                example:
                    (<code>https://ord.databases.api.rackspacecloud.com/v1.0/$account/</code>),
                as you can see in the cURL List Flavors Details
                Request example in <xref linkend="List_Flavors"
                />.</para>
        </section>
        <section xml:id="Export_CURL_ENV_VARS">
            <title>Step 5. Export Environment Variables to Run cURL
                Commands</title>
            <para>To run the cURL command examples in this guide,
                follow this procedure to export environment variables. </para>
            <para audience="gsonly">Otherwise, if you are using trove
                client commands, proceed to <xref
                    linkend="List_Flavors"/>. </para>
            <para>Export your tenant ID and authentication token to
                environment variables. All cURL examples in this guide
                use these environment variables.</para>
            <procedure>
                <title>To export environment variables:</title>
                <step>
                    <para>Export your tenant ID to the
                            <literal>account</literal> environment
                        variable:</para>
                    <screen><computeroutput>$ export account="&lt;tenantId&gt;"</computeroutput></screen>
                    <para>Where <parameter>tenantId</parameter> is the
                        value in the <literal>tenantId</literal> field
                        in the authentication response. </para>
                </step>
                <step>
                    <para>Export your authentication token to the
                            <literal>token</literal> environment
                        variable:
                        <screen><computeroutput>$ export token="&lt;id&gt;"</computeroutput></screen>Where
                            <parameter>id</parameter> is the
                        authentication token value in the
                            <literal>id</literal> field in the
                            <literal>token</literal> element in the
                        authentication response. Refer to <xref
                            linkend="Generating_Auth_Token"/> for
                        information about the token id.</para>
                </step>
            </procedure>
        </section>
        <section xml:id="List_Flavors">
            <title>Step 6. List Flavors</title>
            <para> A flavor is an available hardware configuration for
                a database instance. Each flavor has a unique
                combination of memory capacity and priority for CPU
                time. The larger the flavor size you use, the larger
                the amount of RAM and priority for CPU time your
                database instance will receive. You need to list
                flavors to find the available configurations for your
                database instance, and then decide which size you
                need.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref linkend="List_Flavors_Trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref linkend="List_Flavors_CURL"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="List_Flavors_Trove">
                <title>List Flavors with the trove Client</title>
                <procedure>
                    <title>To list flavors with the trove
                        client:</title>
                    <step>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove flavor-list</programlisting>
                        <para>For each flavor, the command returns the
                            flavor ID, name, and memory:</para>
                        <informalexample width="50">
                            <screen><computeroutput><?db-font-size 30%?>
Flavor List for IAD, DFW, ORD, SYD
+----+----------------+-------+
| id |      name      |  ram  |
+----+----------------+-------+
| 1  | 512MB Instance |  512  |
| 2  |  1GB Instance  |  1024 |
| 3  |  2GB Instance  |  2048 |
| 4  |  4GB Instance  |  4096 |
| 5  |  8GB Instance  |  8192 |
| 6  | 16GB Instance  | 16384 |
| 7  | 32GB Instance  | 32768 |
| 8  | 64GB Instance  | 65536 |
+----+----------------+-------+</computeroutput></screen>
                        </informalexample>
                    </step>
                    <step>
                        <para>Copy the flavor ID for your desired
                            flavor from the <literal>ID</literal>
                            field in the output. </para>
                        <para>In this example, use the flavor ID for
                            the 512MB Standard Instance, which is
                                <literal>1</literal>. </para>
                    </step>
                </procedure>
            </section>
            <?hard-pagebreak?>
            <section xml:id="List_Flavors_CURL">
                <title>List Flavors with cURL</title>
                <procedure>
                    <title>To list flavors with cURL</title>
                    <step>
                        <para>Use the List Flavors API call
                                (<code>/flavors</code>) call.</para>
                        <para>This operation does not require a
                            request body.</para>
                        <para>Execute the cURL request for List
                            Flavors:</para>
                        <example>
                            <title>cURL List Flavors Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl -s</command> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Accept: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/flavors</uri> | python -m json.tool</programlisting>
                        </example>
                    </step>
                    <step>
                        <para>The following example shows the response
                            for List Flavors:</para>
                        <example>
                            <title>List Flavors Response: JSON</title>
                            <programlisting language="json"><xi:include href="../../src/resources/samples/db-flavors-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
                        </example>
                        <para>In the previous examples, you can see
                            from the flavor <code>name</code> that
                            there are multiple flavors available,
                            including <code>2GB Instance</code> (with
                            1 virtual CPU and 2 gigabytes of memory)
                            and <code>512MB Instance</code> (with 1
                            virtual CPU and 0.5 gigabytes of memory). </para>
                        <para>In this example, assume that you decide
                            to use the 512MB Instance (id 1) to
                            provide the needed capacity for your
                            database instance.</para>
                        <para>Notice that there are two kinds of link
                            relations associated with flavor
                            resources. A <code>self</code> link
                            contains a <emphasis>versioned</emphasis>
                            link to the flavor resource. These links
                            should be used in cases where the link
                            will be followed immediately (as you will
                            see in the next section). A
                                <code>bookmark</code> link provides a
                            permanent link to a flavor resource that
                            is appropriate for long term storage and
                            works across API versions.</para>
                    </step>
                </procedure>
            </section>
        </section>
        <section xml:id="Create_DB_Instance">
            <title>Step 7. Create a Database Instance with a Database
                and a User</title>
            <para>A database instance is an isolated database
                environment with compute and storage resources in a
                single tenant environment on a shared physical host
                machine. You can run a database instance with your
                choice of one of the following database engines:
                MySQL, Percona, or MariaDB. In the example below, you
                create a MySQL database instance with a database and a
                user, using the default MySQL 5.6 for the database. </para>
            <note>
                <para>For the SYD and HKG datacenters only, the
                    default database is MySQL 5.1 if users do not
                    specify the datastore type and version at instance
                    creation.</para>
            </note>
            <para>The example instance uses the 512MB Instance flavor
                and a volume size of 2 gigabytes (GB). </para>
            <para>Refer to <link
                xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/POST_createDatabase__version___accountId__instances__instanceId__databases_databases.html"
                    >Create Database</link> in the <citetitle>Cloud
                    Databases Developer Guide</citetitle> for the
                restrictions for choosing the database name.</para>
            <para>Refer to <link
                    xlink:href="http://docs.rackspace.com/cdb/api/v1.0/cdb-devguide/content/Datastore_Types_and_Versions-d1e9263.html"
                    >Datastore Types and Versions</link> in the
                    <citetitle>Cloud Databases Developer
                    Guide</citetitle> for information about the other
                available database types.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref linkend="Create_Instance_Trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref linkend="Create_Instance_CURL"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="Create_Instance_Trove">
                <title>Create a Database Instance with the trove
                    Client</title>
                <para>This example creates a MySQL database instance
                        <code>mytroveinstance</code>, with the
                    following: <itemizedlist>
                        <listitem>
                            <para>the 512MB Instance flavor</para>
                        </listitem>
                        <listitem>
                            <para>volume size of 2 gigabytes
                                (GB)</para>
                        </listitem>
                        <listitem>
                            <para>a database named
                                   <code>mytrovedb</code></para>
                        </listitem>
                        <listitem>
                            <para>a user <code>mytroveuser</code> with
                                password <code>password</code></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <note>
                    <para>If you want to create a different database
                        and version, use the <code>--datastore</code>
                        and <code>--datastore_version</code>
                        parameters to specify your choice. For
                        example, to specify a Percona 5.6 database
                        instead, you would use:</para>
                    <para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove create --size 2 --databases mytrovedb --users mytroveuser:password --datastore Percona --datastore_version 5.6 mytroveinstance 1</programlisting>
                    </para>
                </note>
                <procedure>
                    <title>To create a database instance with a
                        database and a user using the trove
                        client:</title>
                    <step>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove create --size 2 --databases mytrovedb --users mytroveuser:password --datastore MySQL mytroveinstance 1</programlisting>
                        <para>For the instance, the command returns
                            the date created, flavor ID, hostname, id,
                            name, status, and volume size:</para>
                        
                        <informalexample>
                            <?dbfo pgwide="1"?>
                            <screen><?db-font-size 90%?>
+-------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|      Property     |                                                                                                          Value                                                                                                          |
+-------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|      created      |                                                                                                   2014-04-29T13:33:51                                                                                                   |
|     datastore     |                                                                                         {u'version': u'5.6', u'type': u'MySQL'}                                                                                         |
| datastore_version |                                                                                                           5.6                                                                                                           |
|       flavor      | {u'id': u'1', u'links': [{u'href': u'https://dfw.databases.api.rackspacecloud.com/v1.0/647683/flavors/1', u'rel': u'self'}, {u'href': u'https://dfw.databases.api.rackspacecloud.com/flavors/1', u'rel': u'bookmark'}]} |
|      hostname     |                                                                              9175290275ef3292efb02be33dd38ed44443e311.rackspaceclouddb.com                                                                              |
|         id        |                                                                                           18d48a36-0682-4cd7-a419-864105d6079a                                                                                          |
|        name       |                                                                                                     mytroveinstance                                                                                                     |
|       status      |                                                                                                          BUILD                                                                                                          |
|      updated      |                                                                                                   2014-04-29T13:33:51                                                                                                   |
|       volume      |                                                                                                       {u'size': 2}                                                                                                      |
+-------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
</screen>
                        </informalexample>
                        
                    </step>
                    <step>
                        <para>You will need to specify the instance id
                            returned (in the response example above:
                                <code>id="18d48a36-0682-4cd7-a419-864105d6079a"</code>)
                            on subsequent API calls that require it,
                            for example List Databases for
                            Instance.</para>
                        <para>Copy the flavor ID for your desired
                            flavor from the <literal>ID</literal>
                            field in the output. </para>
                    </step>
                </procedure>
            </section>
            <section xml:id="Create_Instance_CURL">
                <title>Create a Database Instance with cURL</title>
                <procedure>
                    <title>To create a database instance with
                        cURL:</title>
                    <step>
                        <para>Create the instance described
                            below.</para>
                        <para>This example creates a database instance
                                <code>myrackinstance</code>, with the
                            following: <itemizedlist>
                                <listitem>
                                   <para>the 512MB Instance
                                   flavor</para>
                                </listitem>
                                <listitem>
                                   <para>volume size of 2 gigabytes
                                   (GB)</para>
                                </listitem>
                                <listitem>
                                   <para>a database named
                                   <code>sampledb</code> with:<itemizedlist>
                                   <listitem>
                                   <para><code>utf8</code> character
                                   set</para>
                                   </listitem>
                                   <listitem>
                                   <para><code>utf8_general_ci</code>
                                   collation</para>
                                   </listitem>
                                   </itemizedlist></para>
                                </listitem>
                                <listitem>
                                   <para>a user
                                   <code>simplestUser</code> with
                                   password
                                   <code>password</code></para>
                                </listitem>
                            </itemizedlist>
                        </para>
                        <note>
                            <para>If you want to create a different
                                database and version, use the
                                   <code>datastore</code>
                                <code>version</code> and
                                   <code>type</code> parameters to
                                specify your choice. For example, to
                                specify a Percona 5.6 database
                                instead, you would add the following
                                information to the example below after
                                the "flavorRef" section (as an
                                example):</para>
                            <para>
                                <programlisting language="bash" role="gutter: false">
"datastore": {
     "version": "5.6",
     "type": "Percona"
},  </programlisting>
                            </para>
                        </note>
                    </step>
                    <step>
                        <para>Execute the cURL request for Create
                            Instance:</para>
                        <example>
                            <title>cURL Create Instance Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
    "instance": {
        "databases": [
            {
                "character_set": "utf8",
                "collate": "utf8_general_ci",
                "name": "sampledb"
            }
        ],
        "flavorRef": "https://ord.databases.api.rackspacecloud.com/v1.0/$account/flavors/1",
        "name": "myrackinstance",
        "users": [
            {
                "databases": [
                    {
                        "name": "sampledb"
                    }
                ],
            "name": "simplestUser",
            "password": "password"
            }
        ],
        "volume": 
            {
                "size": 2
            }
    }
}' \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/instances</uri> | python -m json.tool</programlisting>
                        </example>
                        <para>Rather than the flavorRef URI shown in
                            the example, you can also pass the flavor
                            id (integer) as the value for flavorRef.
                            For example, the flavor id for the flavor
                            URI shown above is "1". </para>
                    </step>
                    <step>
                        <para>The following example shows the Create
                            Instance response:</para>
                        <example>
                            <title>Create Instance Response:
                                JSON</title>
                            <programlisting language="json"><xi:include href="../../src/resources/samples/db-gs-create-database-instance-response.json" parse="text"><xi:fallback>Missing code sample! <?rax fail?></xi:fallback></xi:include></programlisting>
                        </example>
                        <para>You will need to specify the instance id
                            returned (in the response examples above:
                                <code>id="d379ba5c-9a1f-4aa9-9a17-afe237d04c65"</code>)
                            on subsequent API calls that require it,
                            for example List Databases for
                            Instance.</para>
                        <para>Note that the database and user are not
                            listed in the Create Instance responses.
                            Next you will verify that both were
                            successfully created.<note>
                                <para> The operation of creating the
                                   database instance may take up to
                                   several minutes. You will not be
                                   able to perform the operations to
                                   List Databases for Instance and
                                   List Users for Instance in the
                                   sections that follow until the
                                   instance has ACTIVE status. </para>
                            </note></para>
                    </step>
                </procedure>
            </section>
        </section>
        <section xml:id="List_DBS_For_Instance">
            <title>Step 8. List Databases for Instance</title>
            <para>In this section you will list the databases in the
                specified database instance.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref
                                linkend="List_Databases_Instance_Trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref
                                linkend="List_Databases_Instance_CURL"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="List_Databases_Instance_Trove">
                <title>List Databases for Instance with the trove
                    Client</title>
                <procedure>
                    <title>To list databases for an instance with
                        specified ID using the trove client:</title>
                    <step>
                        <para>List the databases for instance
                                <code>mytroveinstance</code>. Use the
                            identifying information for the
                            instance_id, as provided in <xref
                                linkend="Create_Instance_Trove"/> in
                            the response for creating your database
                            instance. </para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove database-list &lt;instance_id></programlisting>
                        <para>The command returns the database name(s)
                            for the instance:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+-----------+
|    name   |
+-----------+
| mytrovedb |
+-----------+

</computeroutput></screen>
                        </informalexample>
                    </step>
                    <step>
                        <para>You will need to specify the instance id
                            returned (in the response examples above:
                                <code>id="18d48a36-0682-4cd7-a419-864105d6079a"</code>)
                            on subsequent API calls that require it,
                            for example List Databases for
                            Instance.</para>
                        <remark>Writer: need to adjust this
                            section</remark>
                        <para>Copy the flavor ID for your desired
                            flavor from the <literal>ID</literal>
                            field in the output. </para>
                    </step>
                </procedure>
            </section>
            <section xml:id="List_Databases_Instance_CURL">
                <title>List Databases for Instance with cURL</title>
                <procedure>
                    <title>To list databases for an instance with
                        specified ID using cURL:</title>
                    <step>
                        <para>List Databases for Instance by executing
                            the request below.</para>
                        <para>This operation does not require a
                            request body.</para>
                        <example>
                            <?dbfo keep-together="always"?>
                            <title>cURL List Databases for Instance
                                Request: JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/instances/</uri><emphasis role="bold">instance_id</emphasis><uri>/databases</uri> | python -m json.tool</programlisting>
                        </example>
                        <para>Remember to replace the names in the
                            example above with their actual respective
                                values:<itemizedlist spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="Create_DB_Instance"
                                   />)</para>
                                </listitem>
                            </itemizedlist></para>
                    </step>
                    <step>
                        <para>The following example shows the response
                            for Create User:</para>
                        <example>
                            <title>List Databases for Instance
                                Response: JSON</title>
                            <programlisting language="json">HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 37
Date: Thu, 05 Apr 2012 18:13:53 GMT

{
    "databases": [
        {
            "name": "sampledb"
        }
    ]
}</programlisting>
                        </example>
                    </step>
                </procedure>
                <para>You can see that the database
                        <code>sampledb</code> was successfully
                    created. Next you will list the users.</para>
            </section>
        </section>
        <section xml:id="List_Users_DB_Instance">
            <title>Step 9. List Users in Database Instance</title>
            <para>In this section you will list the users in the
                specified database instance.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref
                                linkend="List_Users_In_Instance_Trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref
                                linkend="List_Users_In_Instance_CURL"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="List_Users_In_Instance_Trove">
                <title>List Users in Database Instance with the trove
                    Client</title>
                <procedure>
                    <title>To list users for an instance with
                        specified ID using the trove client:</title>
                    <step>
                        <para>List the users for instance
                                <code>mytroveinstance</code>. Use the
                            identifying information for the
                            instance_id, as provided in <xref
                                linkend="Create_Instance_Trove"/> in
                            the response for creating your database
                            instance. </para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-list &lt;instance_id></programlisting>
                        <para>For the instance, the command returns
                            the user name and the databases that the
                            user can access:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+-------------+------+-----------+
|     name    | host | databases |
+-------------+------+-----------+
| mytroveuser |  %   | mytrovedb |
+-------------+------+-----------+

</computeroutput></screen>
                        </informalexample>
                        <note security="writeronly">
                            <para>Note that an empty list ([]) is
                                displayed in the databases column.
                                This is because with the trove client,
                                you cannot create users and databases
                                and, at the same time, grant users
                                access to the database. So the user
                                mytroveuser shown above cannot
                                currently access any databases. With
                                the trove client, granting users
                                access to a database requires an extra
                                step, as follows. </para>
                        </note>
                    </step>
                    <step security="writeronly">
                        <para>To grant the user access to a database
                            using the trove client, issue the
                            following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-grant-access &lt;instance_id></programlisting>
                        <para>Now re-enter the command to list users
                            for an instance:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-list &lt;instance_id></programlisting>
                        <para>The output shows that the user now has
                            access to the databases listed (for
                            example, <code>mytrovedb</code>):</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+-------------+------+---------------------------+
|     name    | host |         databases         |
+-------------+------+---------------------------+
| mytroveuser |  %   | [{u'name': u'mytrovedb'}] |
+-------------+------+---------------------------+
</computeroutput></screen>
                        </informalexample>
                    </step>
                </procedure>
            </section>
            <section xml:id="List_Users_In_Instance_CURL">
                <title>List Users in Database Instance with
                    cURL</title>
                <procedure>
                    <title>To list users in a database instance using
                        cURL:</title>
                    <step>
                        <para>List users in a database instance by
                            executing the request below.</para>
                        <para>This operation does not require a
                            request body.</para>
                        <example>
                            <?dbfo keep-together="always"?>
                            <title>cURL List Users in Database
                                Instance Request: JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/instances/</uri><emphasis role="bold">instance_id</emphasis><uri>/users</uri> | python -m json.tool</programlisting>
                        </example>
                        <para>Remember to replace the names in the
                            example above with their actual respective
                                values:<itemizedlist spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="Create_DB_Instance"
                                   />)</para>
                                </listitem>
                            </itemizedlist></para>
                    </step>
                    <step>
                        <para>The following example shows the response
                            for List Users in Database
                            Instance:</para>
                        <example>
                            <title>List Users in Database Instance
                                Response: JSON</title>
                            <programlisting language="json">HTTP/1.1 200 OK
Content-Type: application/json
Content-Length: 113
Date: Thu, 05 Apr 2012 18:13:53 GMT

{
    "users": [
        {
            "databases": [
                {
                    "name": "sampledb"
                }
            ],
            "host": "%",
            "name": "simplestUser"  
        }
    ]
}</programlisting>
                        </example>
                        <para>You can see that the user
                                <code>simplestUser</code> was
                            successfully listed.</para>
                    </step>
                </procedure>
            </section>
        </section>
        <section xml:id="Create_Cloud_Server">
            <title>Step 10. Create a New Cloud Server</title>
            <para>Create a Cloud Server (or use an existing Cloud
                Server) to access your database.</para>
            <note>
                <para>If you are using an existing Cloud Server on
                    your account, skip this step and go directly to
                        <xref linkend="Configure_Cloud_Server_DB"
                    />.</para>
            </note>
            <para>Create a Cloud Server using the Cloud Servers
                section of the Cloud Control Panel (login here: <link
                    xlink:href="http://mycloud.rackspace.com/">Cloud
                    Control Panel</link>).</para>
            <procedure>
                <title>To create a Cloud Server using the Cloud
                    Control Panel:</title>
                <step>
                    <para>Click <guimenuitem>Servers</guimenuitem> to
                        view the Cloud Servers page.</para>
                </step>
                <step>
                    <para> Using the <guimenu>Region</guimenu>
                        drop-down menu, select the appropriate region,
                        depending on whether you want to create a
                        first generation Cloud Server or a next
                        generation Cloud Server. (The type of Cloud
                        Server does not matter for this
                        exercise.)</para>
                </step>
                <step>
                    <para> Select an image from a list of different
                        operating systems, including Linux
                        Distributions and Windows Images:</para>
                    <para><inlinemediaobject>
                            <imageobject>
                                <imagedata
                                   fileref="images/Choose_CS_Image_CCP.png"
                                   contentwidth="6in"/>
                            </imageobject>
                        </inlinemediaobject></para>
                </step>
                <step>
                    <para> Specify the <guilabel>Server
                            Name</guilabel> and select a
                            <guilabel>Size</guilabel> for your Cloud
                        Server, then click <guibutton>Create
                            Server</guibutton>. </para>
                </step>
            </procedure>
            <note>
                <para>You can also create a Cloud Server using the
                    Cloud Servers API. Refer to the <link
                        xlink:href="http://docs.rackspace.com/">Next
                        Generation Cloud Servers Developer
                        Guide</link> for details.</para>
            </note>
        </section>
        <section xml:id="Configure_Cloud_Server_DB">
            <title>Step 11. Configuring an Application to Use Your
                Cloud Database</title>
            <para>If you are configuring an application to use your
                database on a Cloud Server, you need to configure the
                application with the hostname for the database
                instance and user name / password for the database.
                Refer to the response examples in <xref
                    linkend="Create_DB_Instance"/> for the
                    <code>hostname</code> returned and the request
                examples for the user name and password you
                specified.</para>
        </section>
        <section xml:id="MySQL_GUI_Admin">
            <title>Step 12. MySQL GUI Administration</title>
            <para> If you want to access your database using the
                command line MySQL client, then you have now completed
                the <citetitle>Getting Started</citetitle>.</para>
            <para>Otherwise, you can use a GUI tool such as phpMyAdmin
                to interact with your database instance. Common
                operations include managing databases, tables, fields,
                relations, indexes, users, and permissions. Included
                below is a procedure to set up phpMyAdmin on an Ubuntu
                11.04 Cloud Server. </para>
            <para>For more detailed installation configuration
                instructions see the phpMyAdmin documentation at:
                    <link
                    xlink:href="http://www.phpmyadmin.net/documentation/"
                    >http://www.phpmyadmin.net/documentation/</link>. <note>
                    <para>Rackspace does not provide phpMyAdmin
                        support, and the user is responsible for any
                        security related configuration.</para>
                </note></para>
            <procedure>
                <title>To install and configure phpMyAdmin on an
                    Ubuntu 11.04 Cloud Server:</title>
                <step>
                    <para> Install phpMyAdmin:</para>
                    <para>
                        <command>sudo apt-get install
                            phpmyadmin</command></para>
                </step>
                <step>
                    <para> Set up a symbolic link to the phpmyadmin
                        config file:</para>
                    <para><command>sudo ln -s
                            /etc/phpmyadmin/apache.conf
                            /etc/apache2/conf.d/phpmyadmin.conf</command>
                    </para>
                </step>
                <step>
                    <para>Edit the
                            <code>/etc/phpmyadmin/config-db.php</code>
                        config file to point to your database
                        instance:</para>
                    <para><command>$dbserver='&lt;cloud database
                            hostname>';</command>
                    </para>
                </step>
                <step>
                    <para>Restart apache:</para>
                    <para><command>sudo apachectl
                        restart</command></para>
                </step>
                <step>
                    <para>Access phpMyAdmin at
                        http://&lt;your_ipaddress>/phpMyAdmin:</para>
                    <para><inlinemediaobject>
                            <imageobject>
                                <imagedata
                                   fileref="images/phpMyAdmin.png"
                                   contentwidth="6in"/>
                            </imageobject>
                        </inlinemediaobject></para>
                </step>
            </procedure>
        </section>
        <section xml:id="Backup_Database_Instance">
            <title>Step 13. Backup Your Database Instance</title>
            <para>Once you have loaded your data and connected to your
                application, Rackspace recommends that you back up
                your data.</para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref linkend="Backup_Instance_Trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref linkend="Backup_Instance_CURL"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="Backup_Instance_Trove">
                <title>Backup Database Instance with the trove
                    Client</title>
                <procedure>
                    <title>To create a backup for a database instance
                        using the trove client:</title>
                    <step>
                        <para>Backup your database instance
                                <code>mytroveinstance</code> and give
                            it an identifying name. You can also
                            provide an optional description for the
                            backup. Make sure to surround the
                            description with double quotation marks
                            (""). Use the identifying information for
                            the instance_id, as provided in <xref
                                linkend="Create_Instance_Trove"/> in
                            the response for creating your database
                            instance.</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove backup-create &lt;instance_id> &lt;name> --description &lt;description></programlisting>
                        <para>The command returns the name and id for
                            the backup among the other
                            information:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+-------------+--------------------------------------+
|   Property  |                Value                 |
+-------------+--------------------------------------+
|   created   |         2014-04-29T13:53:08          |
| description |         sample trove backup          |
|      id     | dcb64318-ddca-452e-a896-02cecc5c0aa1 |
| instance_id | 18d48a36-0682-4cd7-a419-864105d6079a |
| locationRef |                 None                 |
|     name    |            mytrovebackup             |
|  parent_id  |                 None                 |
|     size    |                 None                 |
|    status   |                 NEW                  |
|   updated   |         2014-04-29T13:53:08          |
+-------------+--------------------------------------+
</computeroutput></screen>
                        </informalexample>
                    </step>
                </procedure>
            </section>
            <section xml:id="Backup_Instance_CURL">
                <title>Backup Database Instance with cURL</title>
                <procedure>
                    <title>To create a backup for a database instance
                        using cURL:</title>
                    <step>
                        <para>Create a backup for a database instance
                            by executing  the request below.</para>
                        <para>This operation does not require a
                            request body.</para>
                        <example>
                            <title>Backup Database Instance Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
   "backup": {
      "description": "&lt;backup_description>",
      "instance": "&lt;instance_id>",
      "name": "&lt;backup_name>"
   }
}' \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/backups</uri> | python -m json.tool</programlisting>
                        </example>
                        <para>Remember to replace the names in the
                            example above with their actual respective
                                values:<itemizedlist spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >backup_description</emphasis>
                                   &mdash; description for the
                                   backup</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="Create_DB_Instance"
                                   />)</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >backup_name</emphasis> &mdash;
                                   name of the backup</para>
                                </listitem>
                            </itemizedlist></para>
                    </step>
                    <step>
                        <para>The following example shows the response
                            for List Users in Database
                            Instance:</para>
                        <example>
                            <title>Backup Database Instance Response:
                                JSON</title>
                            <programlisting language="json">HTTP/1.1 202 Accepted
Content-Type: application/json
Via: 1.1 Repose (Repose/2.6.7)
Content-Length: 267
Date: Thu, 27 Jun 2013 19:47:55 GMT
Server: Jetty(8.0.y.z-SNAPSHOT)
 
{
    "backup": {
        "created": "2013-06-27T19:47:55", 
        "description": "My Backup", 
        "id": "8c40f9c2-6fe8-4b6b-a823-8a6b1d181f09", 
        "instance_id": "f07ac506-1a99-4a2a-9a32-869b453019ef", 
        "locationRef": null, 
        "name": "snapshot", 
        "status": "NEW", 
        "updated": "2013-06-27T19:47:55"
    }
}</programlisting>
                        </example>
                        <para>You can see that the backups were
                            successfully created.</para>
                    </step>
                </procedure>
                <para>This concludes the <citetitle>Getting
                        Started</citetitle>. Thank you for using
                    Rackspace Cloud products.</para>
            </section>
        </section>
        <section xml:id="Managing_TZ_for_Database_Instances">
            <title>Step 14. Managing the Time Zone for Database
                Instances Using a Configuration Group</title>
            <para>The server time zone for a set of current and future
                database instances can be set using the configuration
                groups feature of Cloud Databases. Suppose you want to
                set the default time zone for a set of database
                instances.</para>
            <para>The server time zone is set in MySQL in the
                    <code>default_time_zone</code> parameter, and the
                default value is ‘SYSTEM’. You can set the time zone
                in MySQL using either:<itemizedlist>
                    <listitem>
                        <para>named time zones</para>
                    </listitem>
                    <listitem>
                        <para>UTC (Coordinated Universal Time)
                            offsets</para>
                    </listitem>
                </itemizedlist></para>
            <para>To set the time zone using named time zones, use the
                appropriate name for your zone, such as
                "Europe/London" or "US/Eastern" to set the
                    <code>default_time_zone</code>, for example:<itemizedlist>
                    <listitem>
                        <para><code>{"default_time_zone”:"Europe/London”}</code></para>
                    </listitem>
                    <listitem>
                        <para><code>{"default_time_zone”:"US/Eastern”}</code></para>
                    </listitem>
                </itemizedlist>For more information about named time
                zones, see the MySQL documentation at <link
                    xlink:href="http://dev.mysql.com/doc/refman/5.6/en/time-zone-support.html"
                    >http://dev.mysql.com/doc/refman/5.6/en/time-zone-support.html</link>.</para>
            <para>To set the <code>default_time_zone</code> using
                offsets of the time zone from <link
                    xlink:href="http://en.wikipedia.org/wiki/Coordinated_Universal_Time"
                    >UTC (Coordinated Universal Time)</link>, use the
                appropriate offset value for your zone. For example
                the CST (Central Standard Time) time zone would be "-6:00":<itemizedlist>
                    <listitem>
                        <para><code>{"default_time_zone":"-6:00”}</code></para>
                    </listitem>
                </itemizedlist></para>
            <para>If you lived in the AEST (Australian Eastern
                Standard Time) time zone on the other hand, the offset
                would be "+10:00".</para>
            <para> You can set <code>default_time_zone</code> in a
                configuration group that can be applied to your
                database instance. You can create a new configuration
                group just for the time zone management, or add the
                time zone parameter to an existing configuration
                group. </para>
            <para>Choose one of the following methods:<itemizedlist>
                    <listitem>
                        <para><xref
                                linkend="Managing_TZ_for_Database_Instances_Trove"
                            /></para>
                    </listitem>
                    <listitem>
                        <para><xref
                                linkend="Managing_TZ_for_Database_Instances_CURL"
                            /></para>
                    </listitem>
                </itemizedlist></para>
            <section xml:id="Managing_TZ_for_Database_Instances_Trove">
                <title>Managing the Time Zone with the trove
                    Client</title>
                <procedure>
                    <title>To create a new configuration group to add
                        custom time zone information to your database
                        instance with the trove client:</title>
                    <step>
                        <para>Create a configuration group named
                                <code>TimeConfig</code> that sets the
                            time zone to CST (Central Standard
                            Time).</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-create TimeConfig '{"default_time_zone":"-6:00"}' --datastore MySQL</programlisting>
                        <para>The command returns the id and name for
                            the configuration group among the other
                            information:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
+----------------------+--------------------------------------+
|       Property       |                Value                 |
+----------------------+--------------------------------------+
| datastore_version_id | 20000000-0000-0000-0000-000000000002 |
|     description      |                 None                 |
|          id          | 00f6070d-27f1-4af2-8388-4cae33899c0c |
|         name         |              TimeConfig              |
|        values        |    {"default_time_zone": "-6:00"}    |
+----------------------+--------------------------------------+
</computeroutput></screen>
                        </informalexample>
                        <para>As an alternative, you could use a named
                            time zone instead of the UTC
                            offset.</para>
                    </step>
                    <step>
                        <para>Apply the new configuration group to
                            your existing database instance (created
                            in <xref linkend="Create_DB_Instance"
                            />).</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-attach &lt;config_id> &lt;instance_id>  </programlisting>
                        <para>Remember to replace the variables in the
                            example above with their actual respective
                                values:<itemizedlist spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >config_id</emphasis> &mdash; as
                                   returned in your create
                                   configuration response (see Step 1
                                   above).</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="Create_DB_Instance"
                                   />)</para>
                                </listitem>
                            </itemizedlist></para>
                        <para>This command does not return any
                            output.</para>
                    </step>
                </procedure>
                <note>
                    <para> The Cloud Databases instance will need to
                        be restarted before the time zone setting
                        takes effect. </para>
                </note>
                <procedure>
                    <title>To add custom time zone information to an
                        existing configuration group with the trove
                        client:</title>
                    <step>
                        <para>Set the <code>default_time_zone</code>
                            parameter on an existing configuration
                            group by running the
                                <command>configuration-patch</command>
                            command with the trove client. </para>
                        <para>The following command would add the IST
                            (India Standard Time, +6:00) time zone to
                            a configuration group with id
                            &lt;config_id>: </para>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-patch &lt;config_id> '{"default_time_zone":"+6:00"}'</programlisting>
                        <para>This command does not return any
                            output.</para>
                    </step>
                </procedure>
                <procedure>
                    <title>To check the server time zone:</title>
                    <step>
                        <para> You can check the current time zone
                            setting for an instance by <link
                                xlink:href="http://ord.admin.kc.rakr.net/knowledge_center/article/connecting-to-your-cloud-database"
                                >logging in to the mysql
                                console</link> and querying the value
                            of <code>global.time_zone</code>: </para>
                        <programlisting language="bash" role="gutter: false">SELECT @@global.time_zone;  </programlisting>
                        <para>The returned value will show the
                            instance's current time zone setting, for
                            example:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
  +--------------------+ | @@global.time_zone | +--------------------+ | +06:00             |
      +--------------------+  
</computeroutput></screen>
                        </informalexample>
                        <para>If the time zone does not reflect what
                            you set in the configuration group
                            attached to the instance, the instance may
                            need to be restarted in order for the
                            change to take effect. </para>
                    </step>
                </procedure>
            </section>
            <section xml:id="Managing_TZ_for_Database_Instances_CURL">
                <title>Managing the Time Zone with cURL</title>
                <procedure>
                    <title>To create a new configuration group to add
                        custom time zone information to your database
                        instance with cURL:</title>
                    <step>
                        <para>Create a configuration group named
                                <code>TimeConfig</code> that sets the
                            time zone to CST by executing the request
                            below:</para>
                        <example>
                            <title>Create Configuration Group Request:
                                JSON</title>
                            <programlisting language="bash"><command>curl</command> <option>-s</option> <option>-d</option> \
'{
  "configuration": {
    "datastore": {
      "type": "10000000-0000-0000-0000-000000000001",
      "version": "20000000-0000-0000-0000-000000000002"
    },
    "description": "Test config",
    "name": "test-configuration",
    "values": {
      "default_time_zone": "-6:00"
    }
  }
}' \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/configurations </uri> | python -m json.tool</programlisting>
                            <para>As an alternative, you could use a
                                named time zone instead of the UTC
                                offset.</para>
                        </example>
                        <para>The following example shows the response
                            for Create Configuration Group
                            Request:</para>
                        <example>
                            <title>Create Configuration Group
                                Response: JSON</title>
                            <programlisting language="json">
{
    "configuration": {
        "datastore_version_id": "20000000-0000-0000-0000-000000000002", 
        "description": "Test config", 
        "id": "63c6e164-2324-4eaa-a3d8-d79528a26e7d", 
        "name": "test-configuration", 
        "values": {
            "default_time_zone": "-6:00"
        }
    }
}</programlisting>
                        </example>
                    </step>
                    <step>
                        <para>Apply the new configuration group to
                            your existing database instance (created
                            in <xref linkend="Create_DB_Instance"
                            />).</para>
                        <para>Issue the following command:</para>
                        <programlisting language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{ 
   "instance": {
      "configuration": "&lt;config_id>" 
   }
}' \
<option>-X PUT</option> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/instances/&lt;instance_id> </uri></programlisting>
                        <para>Remember to replace the following
                            variables in the example above with their
                            actual respective values:<itemizedlist
                                spacing="compact">
                                <listitem>
                                   <para><emphasis role="bold"
                                   >config_id</emphasis> &mdash; as
                                   returned in your Create
                                   Configuration Group response in
                                   Step 1 above.</para>
                                </listitem>
                                <listitem>
                                   <para><emphasis role="bold"
                                   >instance_id</emphasis> &mdash; as
                                   returned in your create instance
                                   response (see the examples in <xref
                                   linkend="Create_DB_Instance"
                                   />)</para>
                                </listitem>
                            </itemizedlist></para>
                        <para>The command does not return a response
                            body:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
HTTP/1.1 202 Accepted
Content-Type: application/json
Via: 1.1 Repose (Repose/2.12)
Content-Length: 0
Date: Fri, 02 May 2014 15:18:56 GMT
Server: Jetty(8.0.y.z-SNAPSHOT)</computeroutput></screen>
                        </informalexample>
                    </step>
                </procedure>
                <note>
                    <para> The Cloud Databases instance will need to
                        be restarted before the time zone setting
                        takes effect. </para>
                </note>
                <procedure>
                    <title>To add custom time zone information to an
                        existing configuration group with
                        cURL:</title>
                    <step>
                        <para>Set the <code>default_time_zone</code>
                            parameter on an existing configuration
                            group by running the Update Some
                            Configuration Parameters request with
                            cURL. </para>
                        <para>The following request would update the
                                <code>default_time_zone</code> from
                            CST (Central Standard Time, -6:00) to IST
                            (India Standard Time, +6:00) time zone to
                            a configuration group with id
                            &lt;config_id>: </para>
                        <programlisting language="bash"><command>curl</command> <option>-i</option> <option>-d</option> \
'{
    "configuration": {
       "values": {
           "default_time_zone": "+6:00"
       }
   }
}' \
<option>-X PATCH</option> \
<option>-H "X-Auth-Token: $token"</option> \
<option>-H "Content-Type: application/json"</option> \
<uri>https://ord.databases.api.rackspacecloud.com/v1.0/</uri>$account<uri>/configurations/&lt;config_id> </uri></programlisting>
                        <para>The command does not return a response
                            body:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
HTTP/1.1 200 OK
Content-Type: application/json
Via: 1.1 Repose (Repose/2.12)
Content-Length: 0
Date: Fri, 02 May 2014 15:44:43 GMT
Server: Jetty(8.0.y.z-SNAPSHOT)</computeroutput></screen>
                        </informalexample>
                    </step>
                </procedure>
                <procedure>
                    <title>To check the server time zone:</title>
                    <step>
                        <para> You can check the current time zone
                            setting for an instance by <link
                                xlink:href="http://ord.admin.kc.rakr.net/knowledge_center/article/connecting-to-your-cloud-database"
                                >logging in to the mysql
                                console</link> and querying the value
                            of <code>global.time_zone</code>: </para>
                        <programlisting language="bash" role="gutter: false">SELECT @@global.time_zone;  </programlisting>
                        <para>The returned value will show the
                            instance's current time zone setting, for
                            example:</para>
                        <informalexample>
                            <screen><computeroutput><?db-font-size 44%?>
  +--------------------+ | @@global.time_zone | +--------------------+ | +06:00             |
      +--------------------+  
</computeroutput></screen>
                        </informalexample>
                        <para>If the time zone does not reflect what
                            you set in the configuration group
                            attached to the instance, the instance may
                            need to be restarted in order for the
                            change to take effect. </para>
                        <para>This concludes the <citetitle>Getting
                                Started</citetitle>. Thank you for
                            using Rackspace Cloud products.</para>
                    </step>
                </procedure>
            </section>
        </section></chapter>
    <chapter xml:id="DB_Doc_Change_History">
        <title>Document Change History</title>
        <para>This version of the Getting Started replaces and
            obsoletes all previous versions. The most recent changes
            are described in the table below:</para>
        <?rax revhistory?>
    </chapter>
    
    <appendix xmlns="http://docbook.org/ns/docbook"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
        xml:id="nova_summary">
        <title>trove Client Command Summary</title>
        <para>Use the following trove client commands to perform API
            operations: </para>
        <section xml:id="trove_summary_limits">
                <title>Limits</title>

                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">List
                            limits for a tenant</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove limit-list</programlisting>
                                </listitem>
                        </varlistentry>
                </variablelist>
            <remark>Reviewer: I receive an error when entering the
                previous command. Baz asked Tim to
                investigate.</remark>
        </section>
        <section xml:id="trove_summary_db_instances">
                <title>Database Instances</title>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">List
                            instances</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove list</programlisting>
                                </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Create
                            instance</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove create &lt;name&gt; &lt;flavor&gt; [--size &lt;size&gt;] [--databases &lt;databases&gt;[&lt;databases> ...]] [--users &lt;users> [&lt;users> ...]] [--backup &lt;backup>] [--availability_zone &lt;availability_zone>]</programlisting>
                                   <itemizedlist>
                                        <title>Positional
                                Arguments</title>
                                        <listitem>
                                                <para>
                                   <parameter>name</parameter>. The
                                   name of the instance. </para>
                                        </listitem>
                                        <listitem>
                                                <para>
                                   <parameter>flavor</parameter>. The
                                   ID of the flavor. </para>
                                        </listitem>
                                   </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--size</option>
                                   <parameter>size</parameter>. The
                                   size of the instance disk in GB.
                                </para>
                                <note>
                                   <para> This is a required argument
                                   for MySQL.</para>
                                </note>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--databases</option>
                                   <parameter> &lt;databases>
                                   [&lt;databases> ...]</parameter>.
                                   An optional list of databases..
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--users</option>
                                   <parameter> &lt;users> [&lt;users>
                                   ...]</parameter>. An optional list
                                   of users in the form
                                   user:password.</para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--backup</option>
                                   <parameter>
                                   &lt;backup></parameter>. A backup
                                   UUID. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--availability_zone</option>
                                   <parameter>&lt;availability_zone></parameter>.
                                   The Zone hint to give to nova.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--datastore</option>
                                   <parameter>&lt;datastore></parameter>.
                                   The datastore type to create.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--datastore_version</option>
                                   <parameter>&lt;datastore_version></parameter>.
                                   The version for the datastore type
                                   to create. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--configuration</option>
                                   <parameter>&lt;configuration></parameter>.
                                   The collection of custom parameter
                                   names and values as allowed by the
                                   datastore version to be applied to
                                   the instance at creation. </para>
                            </listitem>
                        </itemizedlist>
                                </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Get
                            instance details</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove show &lt;instance&gt;</programlisting>
                                   <para> Where
                                <parameter>instance</parameter> is the
                            ID of the instance. </para>
                                </listitem>
                        </varlistentry>
                </variablelist>
            
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Delete
                            instance</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove delete &lt;instance&gt;</programlisting>
                                   <para> Where
                                <parameter>instance</parameter> is the
                            ID of the instance. </para>
                                </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Enable
                            root user</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove root-enable &lt;instance&gt;</programlisting>
                                   <para> Where
                                <parameter>instance</parameter> is the
                            ID of the instance. </para>
                                </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">List
                            root-enabled status</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove root-show &lt;instance&gt;</programlisting>
                                   <para> Where
                                <parameter>instance</parameter> is the
                            ID of the instance. </para>
                                </listitem>
                        </varlistentry>
                </variablelist>
        </section>
        <section xml:id="trove_summary_instanceactions">
            <title>Database Instance Actions</title>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Restart
                            instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove restart &lt;instance&gt;</programlisting>
                        <para> Where <parameter>instance</parameter>
                            is the ID of the instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Resize
                            instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove resize-flavor &lt;instance&gt; &lt;flavor&gt;</programlisting>
                        <para> Where <parameter>instance</parameter>
                            is the ID of the instance and
                                <parameter>flavor</parameter> is the
                            ID of the target flavor for the
                            instance.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Resize instance
                            volume</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove resize-volume &lt;instance&gt; &lt;size&gt;</programlisting>
                        <para> Where <parameter>instance</parameter>
                            is the ID of the instance and
                                <parameter>size</parameter> is the
                            size of the instance disk in GB.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="nova_summary_dbs">
                <title>Databases</title>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Create
                            database on an instance</emphasis></term>
                                <listitem>
                                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove database-create &lt;instance&gt; &lt;name&gt; [--character_set &lt;character_set>] [--collate &lt;collate>]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the instance. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--character_set</option>
                                   <parameter>character_set</parameter>.
                                   The character set to use for the
                                   database. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--collate</option>
                                   <parameter> collate</parameter>.
                                   The collation type to use for the
                                   database. </para>
                            </listitem>
                        </itemizedlist>
                                </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">List
                            available databases on an
                            instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove database-list &lt;instance&gt;</programlisting>
                        <para> Where <parameter>instance</parameter>
                            is the ID of the instance. </para>
                    </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Delete
                            database</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove database-delete &lt;instance&gt; &lt;database&gt;</programlisting>
                        <para> Where <parameter>instance</parameter>
                            is the ID of the instance and database is
                            the <parameter>name</parameter> of the
                            database.</para>
                    </listitem>
                        </varlistentry>
                </variablelist>
        </section>
        
        <section xml:id="trove_summary_users">
            <title>Users</title>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Create
                        user</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-create &lt;instance&gt; &lt;name&gt; &lt;password&gt; [--host &lt;host&gt; [--databases &lt;databases&gt;[&lt;databases> ...]]</programlisting>
                    </listitem>
                </varlistentry>
            </variablelist>
            <itemizedlist>
                <title>Positional Arguments</title>
                <listitem>
                    <para>
                        <parameter>instance</parameter>. The ID of the
                        instance. </para>
                </listitem>
                <listitem>
                    <para>
                        <parameter>name</parameter>. The name of the
                        user. </para>
                </listitem>
                <listitem>
                    <para>
                        <parameter>password</parameter>. The password
                        of the user. </para>
                </listitem>
            </itemizedlist>
            <itemizedlist>
                <title>Optional Arguments</title>
                <listitem>
                    <para>
                        <option>--host</option>
                        <parameter>host</parameter>. The host of the
                        user. </para>
                </listitem>
                <listitem>
                    <para>
                        <option>--databases</option>
                        <parameter> &lt;databases> [&lt;databases>
                            ...]</parameter>. The list of databases..
                    </para>
                </listitem>
            </itemizedlist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List users for
                            database instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-list &lt;instance&gt;</programlisting>
                        <para> Where <parameter>instance</parameter>
                            is the ID of the instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List
                        user</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-show &lt;instance&gt; &lt;name&gt; [--host &lt;host&gt;]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the user. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--host</option>
                                   <parameter>host</parameter>. An
                                   optional host of the user. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Modify user
                            attributes</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-update-attributes &lt;instance&gt; &lt;name&gt; [--host &lt;host&gt;] [--new_name &lt;new_name&gt;] [--new_password &lt;new_password&gt;] [--new_host &lt;new_host&gt;]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the user. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--host</option>
                                   <parameter>host</parameter>. The
                                   host of the user. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--new_name</option>
                                   <parameter>new_name</parameter>.
                                   The new name of the user. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--new_password</option>
                                   <parameter>new_password</parameter>.
                                   The new name of the user. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--new_host</option>
                                   <parameter>new_host</parameter>.
                                   The new host of the user. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Show user
                            access</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-show-access &lt;instance&gt; &lt;name&gt; [--host &lt;host&gt;]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the user. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--host</option>
                                   <parameter>host</parameter>. The
                                   host of the user. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Grant user
                            access</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-grant-access &lt;instance&gt; &lt;name&gt; &lt;databases> [&lt;databases> ...] [--host &lt;host&gt;]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the user. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>databases</parameter>.
                                   The list of databases. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--host</option>
                                   <parameter>host</parameter>. The
                                   host of the user. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <?hard-pagebreak?>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Revoke user
                            access</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-revoke-access &lt;instance&gt; &lt;name&gt; &lt;database> [--host &lt;host&gt;]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the user. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>database</parameter>. A
                                   single database. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--host</option>
                                   <parameter>host</parameter>. The
                                   host of the user. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Delete user for
                            database instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove user-delete &lt;instance&gt; &lt;name&gt; [--host &lt;host&gt;]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the user. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--host</option>
                                   <parameter>host</parameter>. The
                                   host of the user. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="trove_summary_backups">
            <title>Backups</title>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Create
                            backup</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove backup-create &lt;instance&gt; &lt;name&gt; [--description &lt;description>] [--parent &lt;parent>]</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the backup. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>instance</parameter>.
                                   The ID of the instance. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--description</option>
                                   <parameter>description</parameter>.
                                   A description for the backup.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--parent</option>
                                   <parameter>parent</parameter>. ID
                                   of the parent backup from which to
                                   perform an incremental backup.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <para>
                <note>
                    <para>The syntax order for
                            <code>backup-create</code> was changed to
                        that shown above in python-troveclient version
                        1.0.6 and later. Earlier versions require you
                        to pass in the backup name as the first
                        argument.</para>
                </note>
            </para>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List
                            backups</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove backup-list</programlisting>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List available backups
                            for instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove backup-list-instance &lt;instance&gt;</programlisting>
                        <para> Where <parameter>instance</parameter>
                            is the ID of the instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Show details of a
                            backup</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove backup-show &lt;backup&gt;</programlisting>
                        <para> Where <parameter>backup</parameter> is
                            the ID of the backup. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Delete
                            backup</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove backup-delete &lt;backup&gt;</programlisting>
                        <para> Where <parameter>backup</parameter> is
                            the ID of the backup. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="trove_summary_replication">
            <title>Replication</title>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Create
                            replica</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove create &lt;name&gt; &lt;flavor&gt; [--size &lt;size>] --replica_of &lt;instance_id_to_replicate></programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the replica. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>flavor</parameter>. The
                                   flavor of the replica. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--size</option>
                                   <parameter>size</parameter>. The
                                   size of the replica disk in
                                   GB.</para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Required Arguments</title>
                            <listitem>
                                <para>
                                   <option>--replica_of</option>
                                   <parameter>instance_id_to_replicate</parameter>.
                                   The ID of the instance to
                                   replicate.</para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List all replicas and
                            replica source database
                            instances</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove list</programlisting>
                        <note>
                            <para>This command also lists all
                                instances that are part of an HA
                                setup.</para>
                        </note>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List replica
                            source</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove show &lt;replica_source_id&gt;</programlisting>
                        <para> Where
                                <parameter>replica_source_id</parameter>
                            is the ID of the replica source instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List source instance
                            part of HA instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove show &lt;source_instance_id&gt;</programlisting>
                        <para> Where
                                <parameter>source_instance_id</parameter>
                            is the ID of the source instance part of
                            the HA instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List replica
                            details</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove show &lt;replica_instance_id&gt;</programlisting>
                        <para> Where
                                <parameter>replica_instance_id</parameter>
                            is the ID of the replica instance part of
                            the HA instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List replicas for
                            source instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove replica-list &lt;instance_id&gt;</programlisting>
                        <para> Where
                                <parameter>instance_id</parameter> is
                            the ID of the source instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List replica instance
                            part of HA instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove show &lt;replica_instance_id&gt;</programlisting>
                        <para> Where
                                <parameter>replica_instance_id</parameter>
                            is the ID of the replica instance part of
                            the HA instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Detach
                            replica</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove detach-replica &lt;replica_instance_id&gt;  </programlisting>
                        <para> Where
                                <parameter>replica_instance_id</parameter>
                            is the ID of the instance replica to
                            detach. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="trove_summary_ha">
            <title>High Availability</title>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Create HA
                            instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove ha-mysql-create --name &lt;name&gt; --source_name &lt;source_name&gt; --source_flavor_id &lt;source_flavor_id&gt; --source_size &lt;source_size&gt; --number_of_replicas &lt;number_of_replicas&gt; [--networks &lt;networks&gt;] [--acls &lt;acls>]</programlisting>
                        <note>
                            <para> Using this command, mysql-5.6 will
                                be the default datastore type, and the
                                replicas will have the same volume and
                                flavor as the source. </para>
                        </note>
                        <itemizedlist>
                            <title>Required Arguments</title>
                            <listitem>
                                <para>
                                   <option>--name</option>
                                   <parameter> &lt;name></parameter>.
                                   The name of the HA instance.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--source_name</option>
                                   <parameter>
                                   &lt;source_name></parameter>. The
                                   name of the source instance.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--source_flavor_id</option>
                                   <parameter>
                                   &lt;source_flavor_id></parameter>.
                                   The flavorRef of the source
                                   instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--source_size</option>
                                   <parameter>
                                   &lt;source_size></parameter>. The
                                   volume size of the source instance.
                                </para>
                            </listitem>
                            <listitem>
                                <para><option>--number_of_replicas</option>
                                   <parameter>
                                   &lt;number_of_replicas></parameter>.
                                   The number of replicas of the
                                   source instance. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--networks</option>
                                   <parameter>
                                   &lt;networks></parameter>. The
                                   specification for the network
                                   (public/servicenet; private by
                                   default; comma-separated list).
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--acls</option>
                                   <parameter> &lt;scls></parameter>.
                                   A list of ACLs (comma-separated
                                   list) to access the HA instance.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List HA
                            instances</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove ha-mysql-list</programlisting>
                    </listitem>
                </varlistentry>
            </variablelist>
            
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Get HA instance
                        details</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove ha-mysql-show &lt;ha_instance&gt;</programlisting>
                        <para> Where
                            <parameter>ha_instance</parameter> is
                            the ID of the HA instance. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Add ACLs to HA
                        instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove ha-add-acl &lt;ha_instance&gt; &lt;acl&gt;</programlisting>
                        <para> Where
                            <parameter>ha_instance</parameter> is
                            the ID of the HA instance and
                            <parameter>acl</parameter> is the CIDR
                            to add. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List ACLs of an HA
                        instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove ha-list-acl &lt;ha_instance&gt;</programlisting>
                        <para> Where
                            <parameter>ha_instance</parameter> is
                            the ID of the HA instance.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Delete ACLs from an HA
                        instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove ha-remove-acl &lt;ha_instance&gt; &lt;acl&gt;</programlisting>
                        <para> Where
                            <parameter>ha_instance</parameter> is
                            the ID of the HA instance and
                            <parameter>acl</parameter> is the CIDR
                            to remove.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Delete HA
                            instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove ha-mysql-delete &lt;ha_id&gt;</programlisting>
                        <para> Where <parameter>ha_id</parameter> is
                            the ID of the HA instance.</para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="trove_summary_security_groups">
            <title>Security Groups</title>
            <note>
                <para>Security groups are not yet supported for
                    Rackspace Cloud Databases, so the trove client
                    commands listed in this section will not currently
                    work. They will be supported in the future.</para>
            </note>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List security
                            groups</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove secgroup-list</programlisting>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List details for
                            security group</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove secgroup-show &lt;security_group&gt;</programlisting>
                        <para> Where
                                <parameter>security_group</parameter>
                            is the ID of the security group. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Create security group
                            rule</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove secgroup-add-rule &lt;security_group> &lt;protocol> &lt;from_port> &lt;to_port> &lt;cidr></programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>security_group</parameter>.
                                   The name of the security group.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>protocol</parameter>.
                                   The protocol. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>from_port</parameter>.
                                   The from port. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>to_port</parameter>. The
                                   to port. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>cidr</parameter>. The
                                   CIDR address. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Delete security group
                            rule</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove secgroup-delete-rule &lt;security_group_rule></programlisting>
                        <para> Where
                                <parameter>security_group_rule</parameter>
                            is the security group rule to delete. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="trove_configurations">
            <title>Configurations</title>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Create new
                            configuration</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-create &lt;name> &lt;values> [--datastore &lt;datastore&gt;] [--datastore_version &lt;datatstore_version&gt;] [--description
      &lt;description&gt;]  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the configuration. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>values</parameter>. The
                                   values for the configuration.  The
                                   key value pairs &lt;values&gt;
                                   should be in JSON format with no
                                   spaces. Each key value pair should
                                   be separated by a comma.</para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--datastore</option>
                                   <parameter>datastore</parameter>.
                                   The datastore for the
                                   configuration. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--datastore_version</option>
                                   <parameter>datastore_version</parameter>.
                                   The version for the datastore. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--description</option>
                                   <parameter>description</parameter>.
                                   The description for the
                                   configuration. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Create instance with
                            configuration group</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove create &lt;name&gt; &lt;flavor&gt; [--size &lt;size&gt;] [--databases &lt;databases&gt;[&lt;databases> ...]] [--users &lt;users> [&lt;users> ...]] [--backup &lt;backup>] [--availability_zone &lt;availability_zone>] [--configuration_group &lt;config_id&gt;]  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>name</parameter>. The
                                   name of the instance. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>flavor</parameter>. The
                                   ID of the flavor. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--size</option>
                                   <parameter>size</parameter>. The
                                   size of the instance disk in GB. </para>
                                <note>
                                   <para> This is a required argument
                                   for MySQL.</para>
                                </note>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--databases</option>
                                   <parameter> &lt;databases>
                                   [&lt;databases> ...]</parameter>.
                                   An optional list of databases..
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--users</option>
                                   <parameter> &lt;users> [&lt;users>
                                   ...]</parameter>. An optional list
                                   of users in the form
                                   user:password.</para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--backup</option>
                                   <parameter>
                                   &lt;backup></parameter>. A backup
                                   UUID. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--availability_zone</option>
                                   <parameter>&lt;availability_zone></parameter>.
                                   The Zone hint to give to nova.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--configuration_group</option>
                                   <parameter>&lt;config_id></parameter>.
                                   The ID of the configuration group.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Apply configuration
                            group to instance</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-attach &lt;instance_id&gt; &lt;configuration_id&gt;</programlisting>
                        <note>
                            <para>The syntax order for
                                   <code>configuration-attach</code>
                                was changed to that shown above in
                                python-troveclient version 1.0.6 and
                                later. Earlier versions require you to
                                pass in the configuration group ID as
                                the first argument.</para>
                        </note>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>configuration_id</parameter>.
                                   The ID of the configuration group. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>instance_id</parameter>.
                                   The ID for the existing instance. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Detach configuration
                            group from instance and replace with
                            default configuration</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-detach &lt;instance_id&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance_id</parameter>.
                                   The ID for the existing instance.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Update some parameters
                            of a configuration group</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-patch &lt;configuration_group&gt; &lt;values&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>configuration_group</parameter>.
                                   The name of the configuration
                                   group. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>values</parameter>. The
                                   values for the configuration group.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Replace all parameters
                            of a configuration group</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-update &lt;configuration_group&gt; &lt;values&gt; [--name&lt;name&gt;] [--description&lt;description&gt;]  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>configuration_group</parameter>.
                                   The name of the configuration
                                   group. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>values</parameter>. The
                                   values for the configuration group.
                                   The key value pairs &lt;values&gt;
                                   should be in JSON format with no
                                   spaces. Each key value pair should
                                   be separated by a comma. </para>
                            </listitem>
                        </itemizedlist>
                        <itemizedlist>
                            <title>Optional Arguments</title>
                            <listitem>
                                <para>
                                   <option>--name</option>
                                   <parameter>&lt;name></parameter>.
                                   The name of the parameter. </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <option>--description</option>
                                   <parameter>
                                   &lt;description></parameter>. The
                                   description of the parameter.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">View all configuration
                            groups</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-list</programlisting>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">View all instances
                            associated with the specified
                            configuration group</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-instances &lt;config_id&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>config_id</parameter>.
                                   The ID for the configuration group.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold"> View details of
                            default configuration settings for a
                            specific instance </emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-default &lt;instance_id&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>instance_id</parameter>.
                                   The ID for the instance. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold"> View details of
                            configuration group</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-show &lt;config_id&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>config_id</parameter>.
                                   The ID for the configuration group.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold"> View configuration
                            parameters that can be configured for a
                            datastore </emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-parameter-list &lt;datastore_version&gt;</programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>datastore_version</parameter>.
                                   The version of the datastore. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold"> View details of a
                            specific Configuration Parameter that can
                            be configured for a datastore
                        </emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-parameter-show &lt;datastore_version&gt; &lt;parameter&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>datastore_version</parameter>.
                                   The version of the datastore.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>parameter</parameter>.
                                   The parameter for the datastore.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">View verbose default
                            configuration parameters</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-default-dsversion-flavor &lt;datastore_version&gt; &lt;flavor&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>datastore_version</parameter>.
                                   The version of the datastore.
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                   <parameter>flavor</parameter>. The
                                   flavor for the datastore. </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">Delete configuration
                            group</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove configuration-delete &lt;config-id&gt;  </programlisting>
                        <itemizedlist>
                            <title>Positional Arguments</title>
                            <listitem>
                                <para>
                                   <parameter>config-id</parameter>.
                                   The ID of the configuration.
                                </para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="trove_summary_flavors">
                <title>Flavors</title>


                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">List flavors</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove flavor-list</programlisting>
                                </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Get flavor details</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove flavor-show &lt;flavor&gt;</programlisting>
                        <para>Where <parameter>flavor</parameter> is
                            the ID of the flavor. </para>
                                </listitem>
                        </varlistentry>
                </variablelist>
            <variablelist wordsize="10%">
                <varlistentry>
                    <term><emphasis role="bold">List flavors for
                            datastore version</emphasis></term>
                    <listitem>
                        <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove flavor-list –datastore_type &lt;datastore_type&gt; --datastore_version_id &lt;datastore_version_id&gt;  </programlisting>
                        <para>Where
                                <parameter>datastore_type</parameter>
                            is the datastore type and
                                <parameter>datastore_version_id</parameter>
                            is the version ID of the specified
                            datastore type. </para>
                    </listitem>
                </varlistentry>
            </variablelist>
        </section>
        <section xml:id="trove_summary_miscellaneous">
                <title>Miscellaneous</title>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Bash
                            completion</emphasis></term>
                                <listitem>
                                   <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove bash-completion</programlisting>
                                </listitem>
                        </varlistentry>
                </variablelist>
            <note><para>To provide bash completion for trove for the current session,
                    enter the following command:</para>
                <para>
                    <programlisting language="bash" role="gutter: false"><prompt>$</prompt> complete -W "`trove bash-completion`" trove</programlisting>
                </para></note>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Display
                            help for trove</emphasis></term>
                                <listitem>
                                   <para>
                                           <programlisting language="bash" role="gutter: false"><prompt>$</prompt> trove help</programlisting>
                                   </para>
                                </listitem>
                        </varlistentry>
                </variablelist>
                <variablelist wordsize="10%">
                        <varlistentry>
                                <term><emphasis role="bold">Display
                            help for trove command</emphasis></term>
                                <listitem>
                                   <para><programlisting language="bash" role="gutter: false"><prompt>$</prompt> <?db-font-size 75%?>trove help &lt;command&gt;</programlisting></para>
                        <para> Where <parameter>command</parameter> is
                            the command for which to display
                            help.</para>
                                </listitem>
                        </varlistentry>
                </variablelist>
        </section>
</appendix>
    
</book>
